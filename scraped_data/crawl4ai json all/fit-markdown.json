{
  "url": "https://docs.crawl4ai.com/core/fit-markdown",
  "timestamp": "2025-02-06T13:23:40.409839",
  "html": "<!DOCTYPE html><html lang=\"en\" style=\"scroll-padding-top: 50px;\"><head>\n    \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"generator\" content=\"mkdocs-1.6.0, mkdocs-terminal-4.4.0\">\n    \n    <meta name=\"description\" content=\"🚀🤖 Crawl4AI, Open-source LLM-Friendly Web Crawler &amp; Scraper\"> \n     \n    \n    <link rel=\"canonical\" href=\"https://docs.crawl4ai.com/core/fit-markdown/\"><link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"../../img/android-chrome-192x192.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"512x512\" href=\"../../img/android-chrome-512x512.png\">\n<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../../img/apple-touch-icon.png\">\n<link rel=\"shortcut icon\" type=\"image/png\" sizes=\"48x48\" href=\"../../img/favicon.ico\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../../img/favicon-16x16.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../../img/favicon-32x32.png\">\n\n\n    \n \n<title>Fit Markdown - Crawl4AI Documentation (v0.4.3bx)</title>\n\n\n<link href=\"../../css/fontawesome/css/fontawesome.min.css\" rel=\"stylesheet\">\n<link href=\"../../css/fontawesome/css/solid.min.css\" rel=\"stylesheet\">\n<link href=\"../../css/normalize.css\" rel=\"stylesheet\">\n<link href=\"../../css/terminal.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.tile_grid.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.footer.css\" rel=\"stylesheet\">\n<!-- dark color palette -->\n<link href=\"../../css/palettes/dark.css\" rel=\"stylesheet\">\n\n<!-- page layout -->\n<style>\n/* initially set page layout to a one column grid */\n.terminal-mkdocs-main-grid {\n    display: grid;\n    grid-column-gap: 1.4em;\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n}\n\n/*  \n*   when side navigation is not hidden, use a two column grid.  \n*   if the screen is too narrow, fall back to the initial one column grid layout.\n*   in this case the main content will be placed under the navigation panel. \n*/\n@media only screen and (min-width: 70em) {\n    .terminal-mkdocs-main-grid {\n        grid-template-columns: 4fr 9fr;\n    }\n}</style>\n\n\n\n    \n    <link href=\"../../assets/styles.css\" rel=\"stylesheet\"> \n    <link href=\"../../assets/highlight.css\" rel=\"stylesheet\"> \n    <link href=\"../../assets/dmvendor.css\" rel=\"stylesheet\">  \n    \n    \n\n    \n    <!-- search css support -->\n<link href=\"../../css/search/bootstrap-modal.css\" rel=\"stylesheet\">\n<!-- search scripts -->\n<script>\n    var base_url = \"../..\",\n    shortcuts = \"{}\";\n</script>\n<script src=\"../../js/jquery/jquery-1.10.1.min.js\" defer=\"\"></script>\n<script src=\"../../js/bootstrap/bootstrap.min.js\" defer=\"\"></script>\n<script src=\"../../js/mkdocs/base.js\" defer=\"\"></script>\n    \n    \n    \n    \n    <script src=\"../../assets/highlight.min.js\"></script>\n    \n    <script src=\"../../assets/highlight_init.js\"></script>\n    \n    <script src=\"https://buttons.github.io/buttons.js\"></script>\n    \n    <script src=\"../../search/main.js\"></script>\n    \n\n    \n</head>\n\n<body class=\"terminal\" style=\"\"><div class=\"container\">\n    <div class=\"terminal-nav\">\n        <header class=\"terminal-logo\">\n            <div id=\"mkdocs-terminal-site-name\" class=\"logo terminal-prompt\"><a href=\"https://docs.crawl4ai.com/\" class=\"no-style\">Crawl4AI Documentation (v0.4.3bx)</a></div>\n        </header>\n        \n        <nav class=\"terminal-menu\">\n            \n            <ul vocab=\"https://schema.org/\" typeof=\"BreadcrumbList\">\n                \n                \n                <li property=\"itemListElement\" typeof=\"ListItem\">\n                    <a href=\"../..\" class=\"menu-item \" property=\"item\" typeof=\"WebPage\">\n                        <span property=\"name\">Home</span>\n                    </a>\n                    <meta property=\"position\" content=\"0\">\n                </li>\n                \n                \n                \n                \n                <li property=\"itemListElement\" typeof=\"ListItem\">\n                    <a href=\"../quickstart/\" class=\"menu-item \" property=\"item\" typeof=\"WebPage\">\n                        <span property=\"name\">Quick Start</span>\n                    </a>\n                    <meta property=\"position\" content=\"1\">\n                </li>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                    \n                    \n\n\n<li property=\"itemListElement\" typeof=\"ListItem\">\n    <a href=\"#\" class=\"menu-item\" data-toggle=\"modal\" data-target=\"#mkdocs_search_modal\" property=\"item\" typeof=\"SearchAction\">\n        <i aria-hidden=\"true\" class=\"fa fa-search\"></i> <span property=\"name\">Search</span>\n    </a>\n    <meta property=\"position\" content=\"2\">\n</li>\n                    \n            </ul>\n            \n        </nav>\n    </div>\n</div>\n        \n    <div class=\"container\">\n        <div class=\"terminal-mkdocs-main-grid\"><aside id=\"terminal-mkdocs-side-panel\"><nav>\n  \n    <ul class=\"terminal-mkdocs-side-nav-items\">\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../..\">Home</a>\n        \n    \n    \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Setup &amp; Installation</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../installation/\">Installation</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../docker-deploymeny/\">Docker Deployment</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../quickstart/\">Quick Start</a>\n        \n    \n    \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Blog &amp; Changelog</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../blog/\">Blog Home</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"https://github.com/unclecode/crawl4ai/blob/main/CHANGELOG.md\">Changelog</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item--active terminal-mkdocs-side-nav-section-no-index\">Core</span>\n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../simple-crawling/\">Simple Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../crawler-result/\">Crawler Result</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../browser-crawler-config/\">Browser &amp; Crawler Config</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../markdown-generation/\">Markdown Generation</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        <span class=\"\n\n    terminal-mkdocs-side-nav-item--active\">Fit Markdown</span>\n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../page-interaction/\">Page Interaction</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../content-selection/\">Content Selection</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../cache-modes/\">Cache Modes</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../local-files/\">Local Files &amp; Raw HTML</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../link-media/\">Link &amp; Media</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Advanced</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/advanced-features/\">Overview</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/file-downloading/\">File Downloading</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/lazy-loading/\">Lazy Loading</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/hooks-auth/\">Hooks &amp; Auth</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/proxy-security/\">Proxy &amp; Security</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/session-management/\">Session Management</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/multi-url-crawling/\">Multi-URL Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/crawl-dispatcher/\">Crawl Dispatcher</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/identity-based-crawling/\">Identity Based Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/ssl-certificate/\">SSL Certificate</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Extraction</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/no-llm-strategies/\">LLM-Free Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/llm-strategies/\">LLM Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/clustring-strategies/\">Clustering Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/chunking/\">Chunking</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">API Reference</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/async-webcrawler/\">AsyncWebCrawler</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/arun/\">arun()</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/arun_many/\">arun_many()</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/parameters/\">Browser &amp; Crawler Config</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/crawl-result/\">CrawlResult</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/strategies/\">Strategies</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n    </ul>\n  \n</nav><hr>\n<nav>\n    <ul>\n        <li><a href=\"#fit-markdown-with-pruning-bm25\">Fit Markdown with Pruning &amp; BM25</a></li>\n        <li><a href=\"#1-how-fit-markdown-works\">1. How “Fit Markdown” Works</a></li><li><a href=\"#2-pruningcontentfilter\">2. PruningContentFilter</a></li><li><a href=\"#3-bm25contentfilter\">3. BM25ContentFilter</a></li><li><a href=\"#4-accessing-the-fit-output\">4. Accessing the “Fit” Output</a></li><li><a href=\"#5-code-patterns-recap\">5. Code Patterns Recap</a></li><li><a href=\"#6-combining-with-word_count_threshold-exclusions\">6. Combining with “word_count_threshold” &amp; Exclusions</a></li><li><a href=\"#7-custom-filters\">7. Custom Filters</a></li><li><a href=\"#8-final-thoughts\">8. Final Thoughts</a></li>\n    </ul>\n</nav>\n</aside>\n            <main id=\"terminal-mkdocs-main-content\">\n<section id=\"mkdocs-terminal-content\">\n    <h1 id=\"fit-markdown-with-pruning-bm25\">Fit Markdown with Pruning &amp; BM25</h1>\n<p><strong>Fit Markdown</strong> is a specialized <strong>filtered</strong> version of your page’s markdown, focusing on the most relevant content. By default, Crawl4AI converts the entire HTML into a broad <strong>raw_markdown</strong>. With fit markdown, we apply a <strong>content filter</strong> algorithm (e.g., <strong>Pruning</strong> or <strong>BM25</strong>) to remove or rank low-value sections—such as repetitive sidebars, shallow text blocks, or irrelevancies—leaving a concise textual “core.”</p>\n<hr>\n<h2 id=\"1-how-fit-markdown-works\">1. How “Fit Markdown” Works</h2>\n<h3 id=\"11-the-content_filter\">1.1 The <code>content_filter</code></h3>\n<p>In <strong><code>CrawlerRunConfig</code></strong>, you can specify a <strong><code>content_filter</code></strong> to shape how content is pruned or ranked before final markdown generation. A filter’s logic is applied <strong>before</strong> or <strong>during</strong> the HTML→Markdown process, producing:</p>\n<ul>\n<li><strong><code>result.markdown_v2.raw_markdown</code></strong> (unfiltered)</li>\n<li><strong><code>result.markdown_v2.fit_markdown</code></strong> (filtered or “fit” version)</li>\n<li><strong><code>result.markdown_v2.fit_html</code></strong> (the corresponding HTML snippet that produced <code>fit_markdown</code>)</li>\n</ul>\n<blockquote>\n<p><strong>Note</strong>: We’re currently storing the result in <code>markdown_v2</code>, but eventually we’ll unify it as <code>result.markdown</code>.</p>\n</blockquote>\n<h3 id=\"12-common-filters\">1.2 Common Filters</h3>\n<p>1. <strong>PruningContentFilter</strong> – Scores each node by text density, link density, and tag importance, discarding those below a threshold.<br>\n2. <strong>BM25ContentFilter</strong> – Focuses on textual relevance using BM25 ranking, especially useful if you have a specific user query (e.g., “machine learning” or “food nutrition”).</p>\n<hr>\n<h2 id=\"2-pruningcontentfilter\">2. PruningContentFilter</h2>\n<p><strong>Pruning</strong> discards less relevant nodes based on <strong>text density, link density, and tag importance</strong>. It’s a heuristic-based approach—if certain sections appear too “thin” or too “spammy,” they’re pruned.</p>\n<h3 id=\"21-usage-example\">2.1 Usage Example</h3>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> asyncio\n<span class=\"hljs-keyword\">from</span> crawl4ai <span class=\"hljs-keyword\">import</span> AsyncWebCrawler, CrawlerRunConfig\n<span class=\"hljs-keyword\">from</span> crawl4ai.content_filter_strategy <span class=\"hljs-keyword\">import</span> PruningContentFilter\n<span class=\"hljs-keyword\">from</span> crawl4ai.markdown_generation_strategy <span class=\"hljs-keyword\">import</span> DefaultMarkdownGenerator\n\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    <span class=\"hljs-comment\"># Step 1: Create a pruning filter</span>\n    prune_filter = PruningContentFilter(\n        <span class=\"hljs-comment\"># Lower → more content retained, higher → more content pruned</span>\n        threshold=<span class=\"hljs-number\">0.45</span>,           \n        <span class=\"hljs-comment\"># \"fixed\" or \"dynamic\"</span>\n        threshold_type=<span class=\"hljs-string\">\"dynamic\"</span>,  \n        <span class=\"hljs-comment\"># Ignore nodes with &lt;5 words</span>\n        min_word_threshold=<span class=\"hljs-number\">5</span>      \n    )\n\n    <span class=\"hljs-comment\"># Step 2: Insert it into a Markdown Generator</span>\n    md_generator = DefaultMarkdownGenerator(content_filter=prune_filter)\n\n    <span class=\"hljs-comment\"># Step 3: Pass it to CrawlerRunConfig</span>\n    config = CrawlerRunConfig(\n        markdown_generator=md_generator\n    )\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">with</span> AsyncWebCrawler() <span class=\"hljs-keyword\">as</span> crawler:\n        result = <span class=\"hljs-keyword\">await</span> crawler.arun(\n            url=<span class=\"hljs-string\">\"https://news.ycombinator.com\"</span>, \n            config=config\n        )\n\n        <span class=\"hljs-keyword\">if</span> result.success:\n            <span class=\"hljs-comment\"># 'fit_markdown' is your pruned content, focusing on \"denser\" text</span>\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Raw Markdown length:\"</span>, <span class=\"hljs-built_in\">len</span>(result.markdown_v2.raw_markdown))\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Fit Markdown length:\"</span>, <span class=\"hljs-built_in\">len</span>(result.markdown_v2.fit_markdown))\n        <span class=\"hljs-keyword\">else</span>:\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Error:\"</span>, result.error_message)\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    asyncio.run(main())\n</code></pre></div>\n<h3 id=\"22-key-parameters\">2.2 Key Parameters</h3>\n<ul>\n<li><strong><code>min_word_threshold</code></strong> (int): If a block has fewer words than this, it’s pruned.  </li>\n<li><strong><code>threshold_type</code></strong> (str):</li>\n<li><code>\"fixed\"</code> → each node must exceed <code>threshold</code> (0–1).  </li>\n<li><code>\"dynamic\"</code> → node scoring adjusts according to tag type, text/link density, etc.  </li>\n<li><strong><code>threshold</code></strong> (float, default ~0.48): The base or “anchor” cutoff.  </li>\n</ul>\n<p><strong>Algorithmic Factors</strong>:</p>\n<ul>\n<li><strong>Text density</strong> – Encourages blocks that have a higher ratio of text to overall content.  </li>\n<li><strong>Link density</strong> – Penalizes sections that are mostly links.  </li>\n<li><strong>Tag importance</strong> – e.g., an <code>&lt;article&gt;</code> or <code>&lt;p&gt;</code> might be more important than a <code>&lt;div&gt;</code>.  </li>\n<li><strong>Structural context</strong> – If a node is deeply nested or in a suspected sidebar, it might be deprioritized.</li>\n</ul>\n<hr>\n<h2 id=\"3-bm25contentfilter\">3. BM25ContentFilter</h2>\n<p><strong>BM25</strong> is a classical text ranking algorithm often used in search engines. If you have a <strong>user query</strong> or rely on page metadata to derive a query, BM25 can identify which text chunks best match that query.</p>\n<h3 id=\"31-usage-example\">3.1 Usage Example</h3>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> asyncio\n<span class=\"hljs-keyword\">from</span> crawl4ai <span class=\"hljs-keyword\">import</span> AsyncWebCrawler, CrawlerRunConfig\n<span class=\"hljs-keyword\">from</span> crawl4ai.content_filter_strategy <span class=\"hljs-keyword\">import</span> BM25ContentFilter\n<span class=\"hljs-keyword\">from</span> crawl4ai.markdown_generation_strategy <span class=\"hljs-keyword\">import</span> DefaultMarkdownGenerator\n\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    <span class=\"hljs-comment\"># 1) A BM25 filter with a user query</span>\n    bm25_filter = BM25ContentFilter(\n        user_query=<span class=\"hljs-string\">\"startup fundraising tips\"</span>,\n        <span class=\"hljs-comment\"># Adjust for stricter or looser results</span>\n        bm25_threshold=<span class=\"hljs-number\">1.2</span>  \n    )\n\n    <span class=\"hljs-comment\"># 2) Insert into a Markdown Generator</span>\n    md_generator = DefaultMarkdownGenerator(content_filter=bm25_filter)\n\n    <span class=\"hljs-comment\"># 3) Pass to crawler config</span>\n    config = CrawlerRunConfig(\n        markdown_generator=md_generator\n    )\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">with</span> AsyncWebCrawler() <span class=\"hljs-keyword\">as</span> crawler:\n        result = <span class=\"hljs-keyword\">await</span> crawler.arun(\n            url=<span class=\"hljs-string\">\"https://news.ycombinator.com\"</span>, \n            config=config\n        )\n        <span class=\"hljs-keyword\">if</span> result.success:\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Fit Markdown (BM25 query-based):\"</span>)\n            <span class=\"hljs-built_in\">print</span>(result.markdown_v2.fit_markdown)\n        <span class=\"hljs-keyword\">else</span>:\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Error:\"</span>, result.error_message)\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    asyncio.run(main())\n</code></pre></div>\n<h3 id=\"32-parameters\">3.2 Parameters</h3>\n<ul>\n<li><strong><code>user_query</code></strong> (str, optional): E.g. <code>\"machine learning\"</code>. If blank, the filter tries to glean a query from page metadata.  </li>\n<li><strong><code>bm25_threshold</code></strong> (float, default 1.0):  </li>\n<li>Higher → fewer chunks but more relevant.  </li>\n<li>Lower → more inclusive.  </li>\n</ul>\n<blockquote>\n<p>In more advanced scenarios, you might see parameters like <code>use_stemming</code>, <code>case_sensitive</code>, or <code>priority_tags</code> to refine how text is tokenized or weighted.</p>\n</blockquote>\n<hr>\n<h2 id=\"4-accessing-the-fit-output\">4. Accessing the “Fit” Output</h2>\n<p>After the crawl, your “fit” content is found in <strong><code>result.markdown_v2.fit_markdown</code></strong>. In future versions, it will be <strong><code>result.markdown.fit_markdown</code></strong>. Meanwhile:</p>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-ini\"><span class=\"hljs-attr\">fit_md</span> = result.markdown_v2.fit_markdown\n<span class=\"hljs-attr\">fit_html</span> = result.markdown_v2.fit_html\n</code></pre></div>\n<p>If the content filter is <strong>BM25</strong>, you might see additional logic or references in <code>fit_markdown</code> that highlight relevant segments. If it’s <strong>Pruning</strong>, the text is typically well-cleaned but not necessarily matched to a query.</p>\n<hr>\n<h2 id=\"5-code-patterns-recap\">5. Code Patterns Recap</h2>\n<h3 id=\"51-pruning\">5.1 Pruning</h3>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-makefile\">prune_filter = PruningContentFilter(\n    threshold=0.5,\n    threshold_type=<span class=\"hljs-string\">\"fixed\"</span>,\n    min_word_threshold=10\n)\nmd_generator = DefaultMarkdownGenerator(content_filter=prune_filter)\nconfig = CrawlerRunConfig(markdown_generator=md_generator)\n<span class=\"hljs-comment\"># =&gt; result.markdown_v2.fit_markdown</span>\n</code></pre></div>\n<h3 id=\"52-bm25\">5.2 BM25</h3>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-makefile\">bm25_filter = BM25ContentFilter(\n    user_query=<span class=\"hljs-string\">\"health benefits fruit\"</span>,\n    bm25_threshold=1.2\n)\nmd_generator = DefaultMarkdownGenerator(content_filter=bm25_filter)\nconfig = CrawlerRunConfig(markdown_generator=md_generator)\n<span class=\"hljs-comment\"># =&gt; result.markdown_v2.fit_markdown</span>\n</code></pre></div>\n<hr>\n<h2 id=\"6-combining-with-word_count_threshold-exclusions\">6. Combining with “word_count_threshold” &amp; Exclusions</h2>\n<p>Remember you can also specify:</p>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-graphql\">config <span class=\"hljs-punctuation\">=</span> CrawlerRunConfig<span class=\"hljs-punctuation\">(</span>\n    word_count_threshold<span class=\"hljs-punctuation\">=</span><span class=\"hljs-number\">10</span>,\n    excluded_tags<span class=\"hljs-punctuation\">=</span><span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">\"nav\"</span>, <span class=\"hljs-string\">\"footer\"</span>, <span class=\"hljs-string\">\"header\"</span><span class=\"hljs-punctuation\">]</span>,\n    exclude_external_links<span class=\"hljs-punctuation\">=</span><span class=\"hljs-literal\">True</span>,\n    markdown_generator<span class=\"hljs-punctuation\">=</span>DefaultMarkdownGenerator<span class=\"hljs-punctuation\">(</span>\n        content_filter<span class=\"hljs-punctuation\">=</span>PruningContentFilter<span class=\"hljs-punctuation\">(</span>threshold<span class=\"hljs-punctuation\">=</span><span class=\"hljs-number\">0.5</span><span class=\"hljs-punctuation\">)</span>\n    <span class=\"hljs-punctuation\">)</span>\n<span class=\"hljs-punctuation\">)</span>\n</code></pre></div>\n<p>Thus, <strong>multi-level</strong> filtering occurs:</p>\n<ol>\n<li>The crawler’s <code>excluded_tags</code> are removed from the HTML first.  </li>\n<li>The content filter (Pruning, BM25, or custom) prunes or ranks the remaining text blocks.  </li>\n<li>The final “fit” content is generated in <code>result.markdown_v2.fit_markdown</code>.</li>\n</ol>\n<hr>\n<h2 id=\"7-custom-filters\">7. Custom Filters</h2>\n<p>If you need a different approach (like a specialized ML model or site-specific heuristics), you can create a new class inheriting from <code>RelevantContentFilter</code> and implement <code>filter_content(html)</code>. Then inject it into your <strong>markdown generator</strong>:</p>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">from</span> crawl4ai.content_filter_strategy <span class=\"hljs-keyword\">import</span> RelevantContentFilter\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyCustomFilter</span>(<span class=\"hljs-title class_ inherited__\">RelevantContentFilter</span>):\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">filter_content</span>(<span class=\"hljs-params\">self, html, min_word_threshold=<span class=\"hljs-literal\">None</span></span>):\n        <span class=\"hljs-comment\"># parse HTML, implement custom logic</span>\n        <span class=\"hljs-keyword\">return</span> [block <span class=\"hljs-keyword\">for</span> block <span class=\"hljs-keyword\">in</span> ... <span class=\"hljs-keyword\">if</span> ... some condition...]\n</code></pre></div>\n<p><strong>Steps</strong>:</p>\n<ol>\n<li>Subclass <code>RelevantContentFilter</code>.  </li>\n<li>Implement <code>filter_content(...)</code>.  </li>\n<li>Use it in your <code>DefaultMarkdownGenerator(content_filter=MyCustomFilter(...))</code>.</li>\n</ol>\n<hr>\n<h2 id=\"8-final-thoughts\">8. Final Thoughts</h2>\n<p><strong>Fit Markdown</strong> is a crucial feature for:</p>\n<ul>\n<li><strong>Summaries</strong>: Quickly get the important text from a cluttered page.  </li>\n<li><strong>Search</strong>: Combine with <strong>BM25</strong> to produce content relevant to a query.  </li>\n<li><strong>AI Pipelines</strong>: Filter out boilerplate so LLM-based extraction or summarization runs on denser text.</li>\n</ul>\n<p><strong>Key Points</strong>:\n- <strong>PruningContentFilter</strong>: Great if you just want the “meatiest” text without a user query.<br>\n- <strong>BM25ContentFilter</strong>: Perfect for query-based extraction or searching.<br>\n- Combine with <strong><code>excluded_tags</code>, <code>exclude_external_links</code>, <code>word_count_threshold</code></strong> to refine your final “fit” text.<br>\n- Fit markdown ends up in <strong><code>result.markdown_v2.fit_markdown</code></strong>; eventually <strong><code>result.markdown.fit_markdown</code></strong> in future versions.</p>\n<p>With these tools, you can <strong>zero in</strong> on the text that truly matters, ignoring spammy or boilerplate content, and produce a concise, relevant “fit markdown” for your AI or data pipelines. Happy pruning and searching!</p>\n<ul>\n<li>Last Updated: 2025-01-01</li>\n</ul>\n</section>\n\n            </main>\n        </div>\n        <hr><footer>\n    <div class=\"terminal-mkdocs-footer-grid\">\n        <div id=\"terminal-mkdocs-footer-copyright-info\">\n             Site built with <a href=\"http://www.mkdocs.org\">MkDocs</a> and <a href=\"https://github.com/ntno/mkdocs-terminal\">Terminal for MkDocs</a>.\n        </div>\n    </div>\n</footer>\n    </div>\n\n    \n    <div class=\"modal\" id=\"mkdocs_search_modal\" tabindex=\"-1\" role=\"alertdialog\" aria-modal=\"true\" aria-labelledby=\"searchModalLabel\">\n    <div class=\"modal-dialog modal-lg\" role=\"search\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"searchModalLabel\">Search</h5>\n                <button type=\"button\" class=\"close btn btn-default btn-ghost\" data-dismiss=\"modal\"><span aria-hidden=\"true\">x</span><span class=\"sr-only\">Close</span></button>\n            </div>\n            <div class=\"modal-body\">\n                <p id=\"searchInputLabel\">Type to start searching</p>\n                <form>\n                    <div class=\"form-group\">\n                        <input type=\"search\" class=\"form-control\" aria-labelledby=\"searchInputLabel\" placeholder=\"\" id=\"mkdocs-search-query\" title=\"Please enter search terms here\">\n                    </div>\n                </form>\n                <div id=\"mkdocs-search-results\" data-no-results-text=\"No document matches found\"></div>\n            </div>\n            <div class=\"modal-footer\">\n            </div>\n        </div>\n    </div>\n</div>\n    \n    \n\n\n</body></html>",
  "markdown": "# Fit Markdown with Pruning & BM25\n**Fit Markdown** is a specialized **filtered** version of your page’s markdown, focusing on the most relevant content. By default, Crawl4AI converts the entire HTML into a broad **raw_markdown**. With fit markdown, we apply a **content filter** algorithm (e.g., **Pruning** or **BM25**) to remove or rank low-value sections—such as repetitive sidebars, shallow text blocks, or irrelevancies—leaving a concise textual “core.”\n## 1. How “Fit Markdown” Works\n### 1.1 The `content_filter`\nIn **`CrawlerRunConfig`**, you can specify a**`content_filter`**to shape how content is pruned or ranked before final markdown generation. A filter’s logic is applied**before** or **during** the HTML→Markdown process, producing:\n  * **`result.markdown_v2.raw_markdown`**(unfiltered)\n  * **`result.markdown_v2.fit_markdown`**(filtered or “fit” version)\n  * **`result.markdown_v2.fit_html`**(the corresponding HTML snippet that produced`fit_markdown`)\n\n\n> **Note** : We’re currently storing the result in `markdown_v2`, but eventually we’ll unify it as `result.markdown`.\n### 1.2 Common Filters\n1. **PruningContentFilter** – Scores each node by text density, link density, and tag importance, discarding those below a threshold. 2. **BM25ContentFilter** – Focuses on textual relevance using BM25 ranking, especially useful if you have a specific user query (e.g., “machine learning” or “food nutrition”).\n## 2. PruningContentFilter\n**Pruning** discards less relevant nodes based on **text density, link density, and tag importance**. It’s a heuristic-based approach—if certain sections appear too “thin” or too “spammy,” they’re pruned.\n### 2.1 Usage Example\n```\nimport asyncio\nfrom crawl4ai import AsyncWebCrawler, CrawlerRunConfig\nfrom crawl4ai.content_filter_strategy import PruningContentFilter\nfrom crawl4ai.markdown_generation_strategy import DefaultMarkdownGenerator\nasync def main():\n  # Step 1: Create a pruning filter\n  prune_filter = PruningContentFilter(\n    # Lower → more content retained, higher → more content pruned\n    threshold=0.45,      \n    # \"fixed\" or \"dynamic\"\n    threshold_type=\"dynamic\", \n    # Ignore nodes with <5 words\n    min_word_threshold=5   \n  )\n  # Step 2: Insert it into a Markdown Generator\n  md_generator = DefaultMarkdownGenerator(content_filter=prune_filter)\n  # Step 3: Pass it to CrawlerRunConfig\n  config = CrawlerRunConfig(\n    markdown_generator=md_generator\n  )\n  async with AsyncWebCrawler() as crawler:\n    result = await crawler.arun(\n      url=\"https://news.ycombinator.com\", \n      config=config\n    )\n    if result.success:\n      # 'fit_markdown' is your pruned content, focusing on \"denser\" text\n      print(\"Raw Markdown length:\", len(result.markdown_v2.raw_markdown))\n      print(\"Fit Markdown length:\", len(result.markdown_v2.fit_markdown))\n    else:\n      print(\"Error:\", result.error_message)\nif __name__ == \"__main__\":\n  asyncio.run(main())\n\n```\n\n### 2.2 Key Parameters\n  * **`min_word_threshold`**(int): If a block has fewer words than this, it’s pruned.\n  * **`threshold_type`**(str):\n  * `\"fixed\"` → each node must exceed `threshold` (0–1). \n  * `\"dynamic\"` → node scoring adjusts according to tag type, text/link density, etc. \n  * **`threshold`**(float, default ~0.48): The base or “anchor” cutoff.\n\n\n**Algorithmic Factors** :\n  * **Text density** – Encourages blocks that have a higher ratio of text to overall content. \n  * **Link density** – Penalizes sections that are mostly links. \n  * **Tag importance** – e.g., an `<article>` or `<p>` might be more important than a `<div>`. \n  * **Structural context** – If a node is deeply nested or in a suspected sidebar, it might be deprioritized.\n\n\n## 3. BM25ContentFilter\n**BM25** is a classical text ranking algorithm often used in search engines. If you have a **user query** or rely on page metadata to derive a query, BM25 can identify which text chunks best match that query.\n### 3.1 Usage Example\n```\nimport asyncio\nfrom crawl4ai import AsyncWebCrawler, CrawlerRunConfig\nfrom crawl4ai.content_filter_strategy import BM25ContentFilter\nfrom crawl4ai.markdown_generation_strategy import DefaultMarkdownGenerator\nasync def main():\n  # 1) A BM25 filter with a user query\n  bm25_filter = BM25ContentFilter(\n    user_query=\"startup fundraising tips\",\n    # Adjust for stricter or looser results\n    bm25_threshold=1.2 \n  )\n  # 2) Insert into a Markdown Generator\n  md_generator = DefaultMarkdownGenerator(content_filter=bm25_filter)\n  # 3) Pass to crawler config\n  config = CrawlerRunConfig(\n    markdown_generator=md_generator\n  )\n  async with AsyncWebCrawler() as crawler:\n    result = await crawler.arun(\n      url=\"https://news.ycombinator.com\", \n      config=config\n    )\n    if result.success:\n      print(\"Fit Markdown (BM25 query-based):\")\n      print(result.markdown_v2.fit_markdown)\n    else:\n      print(\"Error:\", result.error_message)\nif __name__ == \"__main__\":\n  asyncio.run(main())\n\n```\n\n### 3.2 Parameters\n  * **`user_query`**(str, optional): E.g.`\"machine learning\"`. If blank, the filter tries to glean a query from page metadata. \n  * **`bm25_threshold`**(float, default 1.0):\n  * Higher → fewer chunks but more relevant. \n  * Lower → more inclusive. \n\n\n> In more advanced scenarios, you might see parameters like `use_stemming`, `case_sensitive`, or `priority_tags` to refine how text is tokenized or weighted.\n## 4. Accessing the “Fit” Output\nAfter the crawl, your “fit” content is found in **`result.markdown_v2.fit_markdown`**. In future versions, it will be**`result.markdown.fit_markdown`**. Meanwhile:\n```\nfit_md = result.markdown_v2.fit_markdown\nfit_html = result.markdown_v2.fit_html\n\n```\n\nIf the content filter is **BM25** , you might see additional logic or references in `fit_markdown` that highlight relevant segments. If it’s **Pruning** , the text is typically well-cleaned but not necessarily matched to a query.\n## 5. Code Patterns Recap\n### 5.1 Pruning\n```\nprune_filter = PruningContentFilter(\n  threshold=0.5,\n  threshold_type=\"fixed\",\n  min_word_threshold=10\n)\nmd_generator = DefaultMarkdownGenerator(content_filter=prune_filter)\nconfig = CrawlerRunConfig(markdown_generator=md_generator)\n# => result.markdown_v2.fit_markdown\n\n```\n\n### 5.2 BM25\n```\nbm25_filter = BM25ContentFilter(\n  user_query=\"health benefits fruit\",\n  bm25_threshold=1.2\n)\nmd_generator = DefaultMarkdownGenerator(content_filter=bm25_filter)\nconfig = CrawlerRunConfig(markdown_generator=md_generator)\n# => result.markdown_v2.fit_markdown\n\n```\n\n## 6. Combining with “word_count_threshold” & Exclusions\nRemember you can also specify:\n```\nconfig = CrawlerRunConfig(\n  word_count_threshold=10,\n  excluded_tags=[\"nav\", \"footer\", \"header\"],\n  exclude_external_links=True,\n  markdown_generator=DefaultMarkdownGenerator(\n    content_filter=PruningContentFilter(threshold=0.5)\n  )\n)\n\n```\n\nThus, **multi-level** filtering occurs:\n  1. The crawler’s `excluded_tags` are removed from the HTML first. \n  2. The content filter (Pruning, BM25, or custom) prunes or ranks the remaining text blocks. \n  3. The final “fit” content is generated in `result.markdown_v2.fit_markdown`.\n\n\n## 7. Custom Filters\nIf you need a different approach (like a specialized ML model or site-specific heuristics), you can create a new class inheriting from `RelevantContentFilter` and implement `filter_content(html)`. Then inject it into your **markdown generator** :\n```\nfrom crawl4ai.content_filter_strategy import RelevantContentFilter\nclass MyCustomFilter(RelevantContentFilter):\n  def filter_content(self, html, min_word_threshold=None):\n    # parse HTML, implement custom logic\n    return [block for block in ... if ... some condition...]\n\n```\n\n**Steps** :\n  1. Subclass `RelevantContentFilter`. \n  2. Implement `filter_content(...)`. \n  3. Use it in your `DefaultMarkdownGenerator(content_filter=MyCustomFilter(...))`.\n\n\n## 8. Final Thoughts\n**Fit Markdown** is a crucial feature for:\n  * **Summaries** : Quickly get the important text from a cluttered page. \n  * **Search** : Combine with **BM25** to produce content relevant to a query. \n  * **AI Pipelines** : Filter out boilerplate so LLM-based extraction or summarization runs on denser text.\n\n\n**Key Points** : - **PruningContentFilter** : Great if you just want the “meatiest” text without a user query. - **BM25ContentFilter** : Perfect for query-based extraction or searching. - Combine with **`excluded_tags`,`exclude_external_links` , `word_count_threshold`** to refine your final “fit” text. - Fit markdown ends up in **`result.markdown_v2.fit_markdown`**; eventually**`result.markdown.fit_markdown`**in future versions.\nWith these tools, you can **zero in** on the text that truly matters, ignoring spammy or boilerplate content, and produce a concise, relevant “fit markdown” for your AI or data pipelines. Happy pruning and searching!\n  * Last Updated: 2025-01-01\n\n\n##### Search\nxClose\nType to start searching\n",
  "links": [
    "https://docs.crawl4ai.com",
    "https://docs.crawl4ai.com/advanced/advanced-features",
    "https://docs.crawl4ai.com/advanced/crawl-dispatcher",
    "https://docs.crawl4ai.com/advanced/file-downloading",
    "https://docs.crawl4ai.com/advanced/hooks-auth",
    "https://docs.crawl4ai.com/advanced/identity-based-crawling",
    "https://docs.crawl4ai.com/advanced/lazy-loading",
    "https://docs.crawl4ai.com/advanced/multi-url-crawling",
    "https://docs.crawl4ai.com/advanced/proxy-security",
    "https://docs.crawl4ai.com/advanced/session-management",
    "https://docs.crawl4ai.com/advanced/ssl-certificate",
    "https://docs.crawl4ai.com/api/arun",
    "https://docs.crawl4ai.com/api/arun_many",
    "https://docs.crawl4ai.com/api/async-webcrawler",
    "https://docs.crawl4ai.com/api/crawl-result",
    "https://docs.crawl4ai.com/api/parameters",
    "https://docs.crawl4ai.com/api/strategies",
    "https://docs.crawl4ai.com/blog",
    "https://docs.crawl4ai.com/browser-crawler-config",
    "https://docs.crawl4ai.com/cache-modes",
    "https://docs.crawl4ai.com/content-selection",
    "https://docs.crawl4ai.com/crawler-result",
    "https://docs.crawl4ai.com/docker-deploymeny",
    "https://docs.crawl4ai.com/extraction/chunking",
    "https://docs.crawl4ai.com/extraction/clustring-strategies",
    "https://docs.crawl4ai.com/extraction/llm-strategies",
    "https://docs.crawl4ai.com/extraction/no-llm-strategies",
    "https://docs.crawl4ai.com/installation",
    "https://docs.crawl4ai.com/link-media",
    "https://docs.crawl4ai.com/local-files",
    "https://docs.crawl4ai.com/markdown-generation",
    "https://docs.crawl4ai.com/page-interaction",
    "https://docs.crawl4ai.com/quickstart",
    "https://docs.crawl4ai.com/simple-crawling"
  ],
  "depth": 1,
  "stats": {
    "processed": 19,
    "total": 0,
    "depth": 1,
    "elapsed": "0:00:24",
    "page_limit": 34
  }
}