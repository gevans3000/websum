{
  "url": "https://docs.crawl4ai.com/api/crawl-result",
  "timestamp": "2025-02-06T13:23:29.528540",
  "html": "<!DOCTYPE html><html lang=\"en\" style=\"scroll-padding-top: 50px;\"><head>\n    \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"generator\" content=\"mkdocs-1.6.0, mkdocs-terminal-4.4.0\">\n    \n    <meta name=\"description\" content=\"🚀🤖 Crawl4AI, Open-source LLM-Friendly Web Crawler &amp; Scraper\"> \n     \n    \n    <link rel=\"canonical\" href=\"https://docs.crawl4ai.com/api/crawl-result/\"><link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"../../img/android-chrome-192x192.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"512x512\" href=\"../../img/android-chrome-512x512.png\">\n<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../../img/apple-touch-icon.png\">\n<link rel=\"shortcut icon\" type=\"image/png\" sizes=\"48x48\" href=\"../../img/favicon.ico\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../../img/favicon-16x16.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../../img/favicon-32x32.png\">\n\n\n    \n \n<title>CrawlResult - Crawl4AI Documentation (v0.4.3bx)</title>\n\n\n<link href=\"../../css/fontawesome/css/fontawesome.min.css\" rel=\"stylesheet\">\n<link href=\"../../css/fontawesome/css/solid.min.css\" rel=\"stylesheet\">\n<link href=\"../../css/normalize.css\" rel=\"stylesheet\">\n<link href=\"../../css/terminal.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.tile_grid.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.footer.css\" rel=\"stylesheet\">\n<!-- dark color palette -->\n<link href=\"../../css/palettes/dark.css\" rel=\"stylesheet\">\n\n<!-- page layout -->\n<style>\n/* initially set page layout to a one column grid */\n.terminal-mkdocs-main-grid {\n    display: grid;\n    grid-column-gap: 1.4em;\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n}\n\n/*  \n*   when side navigation is not hidden, use a two column grid.  \n*   if the screen is too narrow, fall back to the initial one column grid layout.\n*   in this case the main content will be placed under the navigation panel. \n*/\n@media only screen and (min-width: 70em) {\n    .terminal-mkdocs-main-grid {\n        grid-template-columns: 4fr 9fr;\n    }\n}</style>\n\n\n\n    \n    <link href=\"../../assets/styles.css\" rel=\"stylesheet\"> \n    <link href=\"../../assets/highlight.css\" rel=\"stylesheet\"> \n    <link href=\"../../assets/dmvendor.css\" rel=\"stylesheet\">  \n    \n    \n\n    \n    <!-- search css support -->\n<link href=\"../../css/search/bootstrap-modal.css\" rel=\"stylesheet\">\n<!-- search scripts -->\n<script>\n    var base_url = \"../..\",\n    shortcuts = \"{}\";\n</script>\n<script src=\"../../js/jquery/jquery-1.10.1.min.js\" defer=\"\"></script>\n<script src=\"../../js/bootstrap/bootstrap.min.js\" defer=\"\"></script>\n<script src=\"../../js/mkdocs/base.js\" defer=\"\"></script>\n    \n    \n    \n    \n    <script src=\"../../assets/highlight.min.js\"></script>\n    \n    <script src=\"../../assets/highlight_init.js\"></script>\n    \n    <script src=\"https://buttons.github.io/buttons.js\"></script>\n    \n    <script src=\"../../search/main.js\"></script>\n    \n\n    \n</head>\n\n<body class=\"terminal\" style=\"\"><div class=\"container\">\n    <div class=\"terminal-nav\">\n        <header class=\"terminal-logo\">\n            <div id=\"mkdocs-terminal-site-name\" class=\"logo terminal-prompt\"><a href=\"https://docs.crawl4ai.com/\" class=\"no-style\">Crawl4AI Documentation (v0.4.3bx)</a></div>\n        </header>\n        \n        <nav class=\"terminal-menu\">\n            \n            <ul vocab=\"https://schema.org/\" typeof=\"BreadcrumbList\">\n                \n                \n                <li property=\"itemListElement\" typeof=\"ListItem\">\n                    <a href=\"../..\" class=\"menu-item \" property=\"item\" typeof=\"WebPage\">\n                        <span property=\"name\">Home</span>\n                    </a>\n                    <meta property=\"position\" content=\"0\">\n                </li>\n                \n                \n                \n                \n                <li property=\"itemListElement\" typeof=\"ListItem\">\n                    <a href=\"../../core/quickstart/\" class=\"menu-item \" property=\"item\" typeof=\"WebPage\">\n                        <span property=\"name\">Quick Start</span>\n                    </a>\n                    <meta property=\"position\" content=\"1\">\n                </li>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                    \n                    \n\n\n<li property=\"itemListElement\" typeof=\"ListItem\">\n    <a href=\"#\" class=\"menu-item\" data-toggle=\"modal\" data-target=\"#mkdocs_search_modal\" property=\"item\" typeof=\"SearchAction\">\n        <i aria-hidden=\"true\" class=\"fa fa-search\"></i> <span property=\"name\">Search</span>\n    </a>\n    <meta property=\"position\" content=\"2\">\n</li>\n                    \n            </ul>\n            \n        </nav>\n    </div>\n</div>\n        \n    <div class=\"container\">\n        <div class=\"terminal-mkdocs-main-grid\"><aside id=\"terminal-mkdocs-side-panel\"><nav>\n  \n    <ul class=\"terminal-mkdocs-side-nav-items\">\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../..\">Home</a>\n        \n    \n    \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Setup &amp; Installation</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/installation/\">Installation</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/docker-deploymeny/\">Docker Deployment</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/quickstart/\">Quick Start</a>\n        \n    \n    \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Blog &amp; Changelog</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../blog/\">Blog Home</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"https://github.com/unclecode/crawl4ai/blob/main/CHANGELOG.md\">Changelog</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Core</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/simple-crawling/\">Simple Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/crawler-result/\">Crawler Result</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/browser-crawler-config/\">Browser &amp; Crawler Config</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/markdown-generation/\">Markdown Generation</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/fit-markdown/\">Fit Markdown</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/page-interaction/\">Page Interaction</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/content-selection/\">Content Selection</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/cache-modes/\">Cache Modes</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/local-files/\">Local Files &amp; Raw HTML</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/link-media/\">Link &amp; Media</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Advanced</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/advanced-features/\">Overview</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/file-downloading/\">File Downloading</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/lazy-loading/\">Lazy Loading</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/hooks-auth/\">Hooks &amp; Auth</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/proxy-security/\">Proxy &amp; Security</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/session-management/\">Session Management</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/multi-url-crawling/\">Multi-URL Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/crawl-dispatcher/\">Crawl Dispatcher</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/identity-based-crawling/\">Identity Based Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../advanced/ssl-certificate/\">SSL Certificate</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Extraction</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/no-llm-strategies/\">LLM-Free Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/llm-strategies/\">LLM Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/clustring-strategies/\">Clustering Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/chunking/\">Chunking</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item--active terminal-mkdocs-side-nav-section-no-index\">API Reference</span>\n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../async-webcrawler/\">AsyncWebCrawler</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../arun/\">arun()</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../arun_many/\">arun_many()</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../parameters/\">Browser &amp; Crawler Config</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        <span class=\"\n\n    terminal-mkdocs-side-nav-item--active\">CrawlResult</span>\n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../strategies/\">Strategies</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n    </ul>\n  \n</nav><hr>\n<nav>\n    <ul>\n        <li><a href=\"#crawlresult-reference\">CrawlResult Reference</a></li>\n        <li><a href=\"#1-basic-crawl-info\">1. Basic Crawl Info</a></li><li><a href=\"#2-raw-cleaned-content\">2. Raw / Cleaned Content</a></li><li><a href=\"#3-markdown-fields\">3. Markdown Fields</a></li><li><a href=\"#4-media-links\">4. Media &amp; Links</a></li><li><a href=\"#5-additional-fields\">5. Additional Fields</a></li><li><a href=\"#6-dispatch_result-optional\">6. dispatch_result (optional)</a></li><li><a href=\"#7-example-accessing-everything\">7. Example: Accessing Everything</a></li><li><a href=\"#8-key-points-future\">8. Key Points &amp; Future</a></li>\n    </ul>\n</nav>\n</aside>\n            <main id=\"terminal-mkdocs-main-content\">\n<section id=\"mkdocs-terminal-content\">\n    <h1 id=\"crawlresult-reference\"><code>CrawlResult</code> Reference</h1>\n<p>The <strong><code>CrawlResult</code></strong> class encapsulates everything returned after a single crawl operation. It provides the <strong>raw or processed content</strong>, details on links and media, plus optional metadata (like screenshots, PDFs, or extracted JSON).</p>\n<p><strong>Location</strong>: <code>crawl4ai/crawler/models.py</code> (for reference)</p>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">CrawlResult</span>(<span class=\"hljs-title class_ inherited__\">BaseModel</span>):\n    url: <span class=\"hljs-built_in\">str</span>\n    html: <span class=\"hljs-built_in\">str</span>\n    success: <span class=\"hljs-built_in\">bool</span>\n    cleaned_html: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">str</span>] = <span class=\"hljs-literal\">None</span>\n    media: <span class=\"hljs-type\">Dict</span>[<span class=\"hljs-built_in\">str</span>, <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Dict</span>]] = {}\n    links: <span class=\"hljs-type\">Dict</span>[<span class=\"hljs-built_in\">str</span>, <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Dict</span>]] = {}\n    downloaded_files: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">str</span>]] = <span class=\"hljs-literal\">None</span>\n    screenshot: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">str</span>] = <span class=\"hljs-literal\">None</span>\n    pdf : <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">bytes</span>] = <span class=\"hljs-literal\">None</span>\n    markdown: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-type\">Union</span>[<span class=\"hljs-built_in\">str</span>, MarkdownGenerationResult]] = <span class=\"hljs-literal\">None</span>\n    markdown_v2: <span class=\"hljs-type\">Optional</span>[MarkdownGenerationResult] = <span class=\"hljs-literal\">None</span>\n    fit_markdown: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">str</span>] = <span class=\"hljs-literal\">None</span>\n    fit_html: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">str</span>] = <span class=\"hljs-literal\">None</span>\n    extracted_content: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">str</span>] = <span class=\"hljs-literal\">None</span>\n    metadata: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">dict</span>] = <span class=\"hljs-literal\">None</span>\n    error_message: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">str</span>] = <span class=\"hljs-literal\">None</span>\n    session_id: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">str</span>] = <span class=\"hljs-literal\">None</span>\n    response_headers: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">dict</span>] = <span class=\"hljs-literal\">None</span>\n    status_code: <span class=\"hljs-type\">Optional</span>[<span class=\"hljs-built_in\">int</span>] = <span class=\"hljs-literal\">None</span>\n    ssl_certificate: <span class=\"hljs-type\">Optional</span>[SSLCertificate] = <span class=\"hljs-literal\">None</span>\n    dispatch_result: <span class=\"hljs-type\">Optional</span>[DispatchResult] = <span class=\"hljs-literal\">None</span>\n    ...\n</code></pre></div>\n<p>Below is a <strong>field-by-field</strong> explanation and possible usage patterns.</p>\n<hr>\n<h2 id=\"1-basic-crawl-info\">1. Basic Crawl Info</h2>\n<h3 id=\"11-url-str\">1.1 <strong><code>url</code></strong> <em>(str)</em></h3>\n<p><strong>What</strong>: The final crawled URL (after any redirects).<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-built_in\">print</span>(result.url)  <span class=\"hljs-comment\"># e.g., \"https://example.com/\"</span>\n</code></pre></div><p></p>\n<h3 id=\"12-success-bool\">1.2 <strong><code>success</code></strong> <em>(bool)</em></h3>\n<p><strong>What</strong>: <code>True</code> if the crawl pipeline ended without major errors; <code>False</code> otherwise.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> result.success:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"Crawl failed: <span class=\"hljs-subst\">{result.error_message}</span>\"</span>)\n</code></pre></div><p></p>\n<h3 id=\"13-status_code-optionalint\">1.3 <strong><code>status_code</code></strong> <em>(Optional[int])</em></h3>\n<p><strong>What</strong>: The page’s HTTP status code (e.g., 200, 404).<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-keyword\">if</span> result.status_code == 404:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Page not found!\"</span>)\n</code></pre></div><p></p>\n<h3 id=\"14-error_message-optionalstr\">1.4 <strong><code>error_message</code></strong> <em>(Optional[str])</em></h3>\n<p><strong>What</strong>: If <code>success=False</code>, a textual description of the failure.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-keyword\">if</span> not result.success:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Error:\"</span>, result.error_message)\n</code></pre></div><p></p>\n<h3 id=\"15-session_id-optionalstr\">1.5 <strong><code>session_id</code></strong> <em>(Optional[str])</em></h3>\n<p><strong>What</strong>: The ID used for reusing a browser context across multiple calls.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-comment\"># If you used session_id=\"login_session\" in CrawlerRunConfig, see it here:</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Session:\"</span>, result.session_id)\n</code></pre></div><p></p>\n<h3 id=\"16-response_headers-optionaldict\">1.6 <strong><code>response_headers</code></strong> <em>(Optional[dict])</em></h3>\n<p><strong>What</strong>: Final HTTP response headers.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-css\">if result<span class=\"hljs-selector-class\">.response_headers</span>:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Server:\"</span>, result.response_headers.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-string\">\"Server\"</span>, <span class=\"hljs-string\">\"Unknown\"</span>))\n</code></pre></div><p></p>\n<h3 id=\"17-ssl_certificate-optionalsslcertificate\">1.7 <strong><code>ssl_certificate</code></strong> <em>(Optional[SSLCertificate])</em></h3>\n<p><strong>What</strong>: If <code>fetch_ssl_certificate=True</code> in your CrawlerRunConfig, <strong><code>result.ssl_certificate</code></strong> contains a  <a href=\"../../advanced/ssl-certificate/\"><strong><code>SSLCertificate</code></strong></a> object describing the site’s certificate. You can export the cert in multiple formats (PEM/DER/JSON) or access its properties like <code>issuer</code>, \n <code>subject</code>, <code>valid_from</code>, <code>valid_until</code>, etc. \n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-keyword\">if</span> result.ssl_certificate:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Issuer:\"</span>, result.ssl_certificate.issuer)\n</code></pre></div><p></p>\n<hr>\n<h2 id=\"2-raw-cleaned-content\">2. Raw / Cleaned Content</h2>\n<h3 id=\"21-html-str\">2.1 <strong><code>html</code></strong> <em>(str)</em></h3>\n<p><strong>What</strong>: The <strong>original</strong> unmodified HTML from the final page load.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-comment\"># Possibly large</span>\n<span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">len</span>(result.html))\n</code></pre></div><p></p>\n<h3 id=\"22-cleaned_html-optionalstr\">2.2 <strong><code>cleaned_html</code></strong> <em>(Optional[str])</em></h3>\n<p><strong>What</strong>: A sanitized HTML version—scripts, styles, or excluded tags are removed based on your <code>CrawlerRunConfig</code>.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-built_in\">print</span>(result.cleaned_html[:500])  <span class=\"hljs-comment\"># Show a snippet</span>\n</code></pre></div><p></p>\n<h3 id=\"23-fit_html-optionalstr\">2.3 <strong><code>fit_html</code></strong> <em>(Optional[str])</em></h3>\n<p><strong>What</strong>: If a <strong>content filter</strong> or heuristic (e.g., Pruning/BM25) modifies the HTML, the “fit” or post-filter version.<br>\n<strong>When</strong>: This is <strong>only</strong> present if your <code>markdown_generator</code> or <code>content_filter</code> produces it.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-keyword\">if</span> result.fit_html:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"High-value HTML content:\"</span>, result.fit_html[:300])\n</code></pre></div><p></p>\n<hr>\n<h2 id=\"3-markdown-fields\">3. Markdown Fields</h2>\n<h3 id=\"31-the-markdown-generation-approach\">3.1 The Markdown Generation Approach</h3>\n<p>Crawl4AI can convert HTML→Markdown, optionally including:</p>\n<ul>\n<li><strong>Raw</strong> markdown  </li>\n<li><strong>Links as citations</strong> (with a references section)  </li>\n<li><strong>Fit</strong> markdown if a <strong>content filter</strong> is used (like Pruning or BM25)</li>\n</ul>\n<h3 id=\"32-markdown_v2-optionalmarkdowngenerationresult\">3.2 <strong><code>markdown_v2</code></strong> <em>(Optional[MarkdownGenerationResult])</em></h3>\n<p><strong>What</strong>: The <strong>structured</strong> object holding multiple markdown variants. Soon to be consolidated into <code>markdown</code>.  </p>\n<p><strong><code>MarkdownGenerationResult</code></strong> includes:\n- <strong><code>raw_markdown</code></strong> <em>(str)</em>: The full HTML→Markdown conversion.<br>\n- <strong><code>markdown_with_citations</code></strong> <em>(str)</em>: Same markdown, but with link references as academic-style citations.<br>\n- <strong><code>references_markdown</code></strong> <em>(str)</em>: The reference list or footnotes at the end.<br>\n- <strong><code>fit_markdown</code></strong> <em>(Optional[str])</em>: If content filtering (Pruning/BM25) was applied, the filtered “fit” text.<br>\n- <strong><code>fit_html</code></strong> <em>(Optional[str])</em>: The HTML that led to <code>fit_markdown</code>.</p>\n<p><strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-keyword\">if</span> result.markdown_v2:\n    md_res = result.markdown_v2\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Raw MD:\"</span>, md_res.raw_markdown[:300])\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Citations MD:\"</span>, md_res.markdown_with_citations[:300])\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"References:\"</span>, md_res.references_markdown)\n    <span class=\"hljs-keyword\">if</span> md_res.fit_markdown:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Pruned text:\"</span>, md_res.fit_markdown[:300])\n</code></pre></div><p></p>\n<h3 id=\"33-markdown-optionalunionstr-markdowngenerationresult\">3.3 <strong><code>markdown</code></strong> <em>(Optional[Union[str, MarkdownGenerationResult]])</em></h3>\n<p><strong>What</strong>: In future versions, <code>markdown</code> will fully replace <code>markdown_v2</code>. Right now, it might be a <code>str</code> or a <code>MarkdownGenerationResult</code>.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-comment\"># Soon, you might see:</span>\n<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isinstance</span>(result.markdown, MarkdownGenerationResult):\n    <span class=\"hljs-built_in\">print</span>(result.markdown.raw_markdown[:<span class=\"hljs-number\">200</span>])\n<span class=\"hljs-keyword\">else</span>:\n    <span class=\"hljs-built_in\">print</span>(result.markdown)\n</code></pre></div><p></p>\n<h3 id=\"34-fit_markdown-optionalstr\">3.4 <strong><code>fit_markdown</code></strong> <em>(Optional[str])</em></h3>\n<p><strong>What</strong>: A direct reference to the final filtered markdown (legacy approach).<br>\n<strong>When</strong>: This is set if a filter or content strategy explicitly writes there. Usually overshadowed by <code>markdown_v2.fit_markdown</code>.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-built_in\">print</span>(result.fit_markdown)  <span class=\"hljs-comment\"># Legacy field, prefer result.markdown_v2.fit_markdown</span>\n</code></pre></div><p></p>\n<p><strong>Important</strong>: “Fit” content (in <code>fit_markdown</code>/<code>fit_html</code>) only exists if you used a <strong>filter</strong> (like <strong>PruningContentFilter</strong> or <strong>BM25ContentFilter</strong>) within a <code>MarkdownGenerationStrategy</code>.</p>\n<hr>\n<h2 id=\"4-media-links\">4. Media &amp; Links</h2>\n<h3 id=\"41-media-dictstr-listdict\">4.1 <strong><code>media</code></strong> <em>(Dict[str, List[Dict]])</em></h3>\n<p><strong>What</strong>: Contains info about discovered images, videos, or audio. Typically keys: <code>\"images\"</code>, <code>\"videos\"</code>, <code>\"audios\"</code>.<br>\n<strong>Common Fields</strong> in each item:</p>\n<ul>\n<li><code>src</code> <em>(str)</em>: Media URL  </li>\n<li><code>alt</code> or <code>title</code> <em>(str)</em>: Descriptive text  </li>\n<li><code>score</code> <em>(float)</em>: Relevance score if the crawler’s heuristic found it “important”  </li>\n<li><code>desc</code> or <code>description</code> <em>(Optional[str])</em>: Additional context extracted from surrounding text  </li>\n</ul>\n<p><strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-csharp\">images = result.media.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">\"images\"</span>, [])\n<span class=\"hljs-keyword\">for</span> img <span class=\"hljs-keyword\">in</span> images:\n    <span class=\"hljs-keyword\">if</span> img.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">\"score\"</span>, <span class=\"hljs-number\">0</span>) &gt; <span class=\"hljs-number\">5</span>:\n        print(<span class=\"hljs-string\">\"High-value image:\"</span>, img[<span class=\"hljs-string\">\"src\"</span>])\n</code></pre></div><p></p>\n<h3 id=\"42-links-dictstr-listdict\">4.2 <strong><code>links</code></strong> <em>(Dict[str, List[Dict]])</em></h3>\n<p><strong>What</strong>: Holds internal and external link data. Usually two keys: <code>\"internal\"</code> and <code>\"external\"</code>.<br>\n<strong>Common Fields</strong>:</p>\n<ul>\n<li><code>href</code> <em>(str)</em>: The link target  </li>\n<li><code>text</code> <em>(str)</em>: Link text  </li>\n<li><code>title</code> <em>(str)</em>: Title attribute  </li>\n<li><code>context</code> <em>(str)</em>: Surrounding text snippet  </li>\n<li><code>domain</code> <em>(str)</em>: If external, the domain</li>\n</ul>\n<p><strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">for</span> link <span class=\"hljs-keyword\">in</span> result.links[<span class=\"hljs-string\">\"internal\"</span>]:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"Internal link to <span class=\"hljs-subst\">{link[<span class=\"hljs-string\">'href'</span>]}</span> with text <span class=\"hljs-subst\">{link[<span class=\"hljs-string\">'text'</span>]}</span>\"</span>)\n</code></pre></div><p></p>\n<hr>\n<h2 id=\"5-additional-fields\">5. Additional Fields</h2>\n<h3 id=\"51-extracted_content-optionalstr\">5.1 <strong><code>extracted_content</code></strong> <em>(Optional[str])</em></h3>\n<p><strong>What</strong>: If you used <strong><code>extraction_strategy</code></strong> (CSS, LLM, etc.), the structured output (JSON).<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-css\">if result<span class=\"hljs-selector-class\">.extracted_content</span>:\n    data = json.<span class=\"hljs-built_in\">loads</span>(result.extracted_content)\n    <span class=\"hljs-built_in\">print</span>(data)\n</code></pre></div><p></p>\n<h3 id=\"52-downloaded_files-optionalliststr\">5.2 <strong><code>downloaded_files</code></strong> <em>(Optional[List[str]])</em></h3>\n<p><strong>What</strong>: If <code>accept_downloads=True</code> in your <code>BrowserConfig</code> + <code>downloads_path</code>, lists local file paths for downloaded items.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-bash\"><span class=\"hljs-keyword\">if</span> result.downloaded_files:\n    <span class=\"hljs-keyword\">for</span> file_path <span class=\"hljs-keyword\">in</span> result.downloaded_files:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Downloaded:\"</span>, file_path)\n</code></pre></div><p></p>\n<h3 id=\"53-screenshot-optionalstr\">5.3 <strong><code>screenshot</code></strong> <em>(Optional[str])</em></h3>\n<p><strong>What</strong>: Base64-encoded screenshot if <code>screenshot=True</code> in <code>CrawlerRunConfig</code>.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> base64\n<span class=\"hljs-keyword\">if</span> result.screenshot:\n    <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"page.png\"</span>, <span class=\"hljs-string\">\"wb\"</span>) <span class=\"hljs-keyword\">as</span> f:\n        f.write(base64.b64decode(result.screenshot))\n</code></pre></div><p></p>\n<h3 id=\"54-pdf-optionalbytes\">5.4 <strong><code>pdf</code></strong> <em>(Optional[bytes])</em></h3>\n<p><strong>What</strong>: Raw PDF bytes if <code>pdf=True</code> in <code>CrawlerRunConfig</code>.<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">if</span> result.pdf:\n    <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"page.pdf\"</span>, <span class=\"hljs-string\">\"wb\"</span>) <span class=\"hljs-keyword\">as</span> f:\n        f.write(result.pdf)\n</code></pre></div><p></p>\n<h3 id=\"55-metadata-optionaldict\">5.5 <strong><code>metadata</code></strong> <em>(Optional[dict])</em></h3>\n<p><strong>What</strong>: Page-level metadata if discovered (title, description, OG data, etc.).<br>\n<strong>Usage</strong>:\n</p><div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-css\">if result<span class=\"hljs-selector-class\">.metadata</span>:\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Title:\"</span>, result.metadata.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-string\">\"title\"</span>))\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Author:\"</span>, result.metadata.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-string\">\"author\"</span>))\n</code></pre></div><p></p>\n<hr>\n<h2 id=\"6-dispatch_result-optional\">6. <code>dispatch_result</code> (optional)</h2>\n<p>A <code>DispatchResult</code> object providing additional concurrency and resource usage information when crawling URLs in parallel (e.g., via <code>arun_many()</code> with custom dispatchers). It contains:</p>\n<ul>\n<li><strong><code>task_id</code></strong>: A unique identifier for the parallel task.</li>\n<li><strong><code>memory_usage</code></strong> (float): The memory (in MB) used at the time of completion.</li>\n<li><strong><code>peak_memory</code></strong> (float): The peak memory usage (in MB) recorded during the task’s execution.</li>\n<li><strong><code>start_time</code></strong> / <strong><code>end_time</code></strong> (datetime): Time range for this crawling task.</li>\n<li><strong><code>error_message</code></strong> (str): Any dispatcher- or concurrency-related error encountered.</li>\n</ul>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-comment\"># Example usage:</span>\n<span class=\"hljs-keyword\">for</span> result <span class=\"hljs-keyword\">in</span> results:\n    <span class=\"hljs-keyword\">if</span> result.success <span class=\"hljs-keyword\">and</span> result.dispatch_result:\n        dr = result.dispatch_result\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"URL: <span class=\"hljs-subst\">{result.url}</span>, Task ID: <span class=\"hljs-subst\">{dr.task_id}</span>\"</span>)\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"Memory: <span class=\"hljs-subst\">{dr.memory_usage:<span class=\"hljs-number\">.1</span>f}</span> MB (Peak: <span class=\"hljs-subst\">{dr.peak_memory:<span class=\"hljs-number\">.1</span>f}</span> MB)\"</span>)\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"Duration: <span class=\"hljs-subst\">{dr.end_time - dr.start_time}</span>\"</span>)\n</code></pre></div>\n<blockquote>\n<p><strong>Note</strong>: This field is typically populated when using <code>arun_many(...)</code> alongside a <strong>dispatcher</strong> (e.g., <code>MemoryAdaptiveDispatcher</code> or <code>SemaphoreDispatcher</code>). If no concurrency or dispatcher is used, <code>dispatch_result</code> may remain <code>None</code>. </p>\n</blockquote>\n<hr>\n<h2 id=\"7-example-accessing-everything\">7. Example: Accessing Everything</h2>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">handle_result</span>(<span class=\"hljs-params\">result: CrawlResult</span>):\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> result.success:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Crawl error:\"</span>, result.error_message)\n        <span class=\"hljs-keyword\">return</span>\n\n    <span class=\"hljs-comment\"># Basic info</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Crawled URL:\"</span>, result.url)\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Status code:\"</span>, result.status_code)\n\n    <span class=\"hljs-comment\"># HTML</span>\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Original HTML size:\"</span>, <span class=\"hljs-built_in\">len</span>(result.html))\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Cleaned HTML size:\"</span>, <span class=\"hljs-built_in\">len</span>(result.cleaned_html <span class=\"hljs-keyword\">or</span> <span class=\"hljs-string\">\"\"</span>))\n\n    <span class=\"hljs-comment\"># Markdown output</span>\n    <span class=\"hljs-keyword\">if</span> result.markdown_v2:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Raw Markdown:\"</span>, result.markdown_v2.raw_markdown[:<span class=\"hljs-number\">300</span>])\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Citations Markdown:\"</span>, result.markdown_v2.markdown_with_citations[:<span class=\"hljs-number\">300</span>])\n        <span class=\"hljs-keyword\">if</span> result.markdown_v2.fit_markdown:\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Fit Markdown:\"</span>, result.markdown_v2.fit_markdown[:<span class=\"hljs-number\">200</span>])\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Raw Markdown (legacy):\"</span>, result.markdown[:<span class=\"hljs-number\">200</span>] <span class=\"hljs-keyword\">if</span> result.markdown <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">\"N/A\"</span>)\n\n    <span class=\"hljs-comment\"># Media &amp; Links</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">\"images\"</span> <span class=\"hljs-keyword\">in</span> result.media:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Image count:\"</span>, <span class=\"hljs-built_in\">len</span>(result.media[<span class=\"hljs-string\">\"images\"</span>]))\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">\"internal\"</span> <span class=\"hljs-keyword\">in</span> result.links:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Internal link count:\"</span>, <span class=\"hljs-built_in\">len</span>(result.links[<span class=\"hljs-string\">\"internal\"</span>]))\n\n    <span class=\"hljs-comment\"># Extraction strategy result</span>\n    <span class=\"hljs-keyword\">if</span> result.extracted_content:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Structured data:\"</span>, result.extracted_content)\n\n    <span class=\"hljs-comment\"># Screenshot/PDF</span>\n    <span class=\"hljs-keyword\">if</span> result.screenshot:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Screenshot length:\"</span>, <span class=\"hljs-built_in\">len</span>(result.screenshot))\n    <span class=\"hljs-keyword\">if</span> result.pdf:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"PDF bytes length:\"</span>, <span class=\"hljs-built_in\">len</span>(result.pdf))\n</code></pre></div>\n<hr>\n<h2 id=\"8-key-points-future\">8. Key Points &amp; Future</h2>\n<p>1. <strong><code>markdown_v2</code> vs <code>markdown</code></strong><br>\n   - Right now, <code>markdown_v2</code> is the more robust container (<code>MarkdownGenerationResult</code>), providing <strong>raw_markdown</strong>, <strong>markdown_with_citations</strong>, references, plus possible <strong>fit_markdown</strong>.<br>\n   - In future versions, everything will unify under <strong><code>markdown</code></strong>. If you rely on advanced features (citations, fit content), check <code>markdown_v2</code>.</p>\n<p>2. <strong>Fit Content</strong><br>\n   - <strong><code>fit_markdown</code></strong> and <strong><code>fit_html</code></strong> appear only if you used a content filter (like <strong>PruningContentFilter</strong> or <strong>BM25ContentFilter</strong>) inside your <strong>MarkdownGenerationStrategy</strong> or set them directly.<br>\n   - If no filter is used, they remain <code>None</code>.</p>\n<p>3. <strong>References &amp; Citations</strong><br>\n   - If you enable link citations in your <code>DefaultMarkdownGenerator</code> (<code>options={\"citations\": True}</code>), you’ll see <code>markdown_with_citations</code> plus a <strong><code>references_markdown</code></strong> block. This helps large language models or academic-like referencing.</p>\n<p>4. <strong>Links &amp; Media</strong><br>\n   - <code>links[\"internal\"]</code> and <code>links[\"external\"]</code> group discovered anchors by domain.<br>\n   - <code>media[\"images\"]</code> / <code>[\"videos\"]</code> / <code>[\"audios\"]</code> store extracted media elements with optional scoring or context.</p>\n<p>5. <strong>Error Cases</strong><br>\n   - If <code>success=False</code>, check <code>error_message</code> (e.g., timeouts, invalid URLs).<br>\n   - <code>status_code</code> might be <code>None</code> if we failed before an HTTP response.</p>\n<p>Use <strong><code>CrawlResult</code></strong> to glean all final outputs and feed them into your data pipelines, AI models, or archives. With the synergy of a properly configured <strong>BrowserConfig</strong> and <strong>CrawlerRunConfig</strong>, the crawler can produce robust, structured results here in <strong><code>CrawlResult</code></strong>.</p>\n</section>\n\n            </main>\n        </div>\n        <hr><footer>\n    <div class=\"terminal-mkdocs-footer-grid\">\n        <div id=\"terminal-mkdocs-footer-copyright-info\">\n             Site built with <a href=\"http://www.mkdocs.org\">MkDocs</a> and <a href=\"https://github.com/ntno/mkdocs-terminal\">Terminal for MkDocs</a>.\n        </div>\n    </div>\n</footer>\n    </div>\n\n    \n    <div class=\"modal\" id=\"mkdocs_search_modal\" tabindex=\"-1\" role=\"alertdialog\" aria-modal=\"true\" aria-labelledby=\"searchModalLabel\">\n    <div class=\"modal-dialog modal-lg\" role=\"search\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"searchModalLabel\">Search</h5>\n                <button type=\"button\" class=\"close btn btn-default btn-ghost\" data-dismiss=\"modal\"><span aria-hidden=\"true\">x</span><span class=\"sr-only\">Close</span></button>\n            </div>\n            <div class=\"modal-body\">\n                <p id=\"searchInputLabel\">Type to start searching</p>\n                <form>\n                    <div class=\"form-group\">\n                        <input type=\"search\" class=\"form-control\" aria-labelledby=\"searchInputLabel\" placeholder=\"\" id=\"mkdocs-search-query\" title=\"Please enter search terms here\">\n                    </div>\n                </form>\n                <div id=\"mkdocs-search-results\" data-no-results-text=\"No document matches found\"></div>\n            </div>\n            <div class=\"modal-footer\">\n            </div>\n        </div>\n    </div>\n</div>\n    \n    \n\n\n</body></html>",
  "markdown": "# `CrawlResult` Reference\nThe **`CrawlResult`**class encapsulates everything returned after a single crawl operation. It provides the**raw or processed content** , details on links and media, plus optional metadata (like screenshots, PDFs, or extracted JSON).\n**Location** : `crawl4ai/crawler/models.py` (for reference)\n```\nclass CrawlResult(BaseModel):\n  url: str\n  html: str\n  success: bool\n  cleaned_html: Optional[str] = None\n  media: Dict[str, List[Dict]] = {}\n  links: Dict[str, List[Dict]] = {}\n  downloaded_files: Optional[List[str]] = None\n  screenshot: Optional[str] = None\n  pdf : Optional[bytes] = None\n  markdown: Optional[Union[str, MarkdownGenerationResult]] = None\n  markdown_v2: Optional[MarkdownGenerationResult] = None\n  fit_markdown: Optional[str] = None\n  fit_html: Optional[str] = None\n  extracted_content: Optional[str] = None\n  metadata: Optional[dict] = None\n  error_message: Optional[str] = None\n  session_id: Optional[str] = None\n  response_headers: Optional[dict] = None\n  status_code: Optional[int] = None\n  ssl_certificate: Optional[SSLCertificate] = None\n  dispatch_result: Optional[DispatchResult] = None\n  ...\n\n```\n\nBelow is a **field-by-field** explanation and possible usage patterns.\n## 1. Basic Crawl Info\n### 1.1 **`url`**_(str)_\n**What** : The final crawled URL (after any redirects). **Usage** : \n```\nprint(result.url) # e.g., \"https://example.com/\"\n\n```\n\n### 1.2 **`success`**_(bool)_\n**What** : `True` if the crawl pipeline ended without major errors; `False` otherwise. **Usage** : \n```\nif not result.success:\n  print(f\"Crawl failed: {result.error_message}\")\n\n```\n\n### 1.3 **`status_code`**_(Optional[int])_\n**What** : The page’s HTTP status code (e.g., 200, 404). **Usage** : \n```\nif result.status_code == 404:\n  print(\"Page not found!\")\n\n```\n\n### 1.4 **`error_message`**_(Optional[str])_\n**What** : If `success=False`, a textual description of the failure. **Usage** : \n```\nif not result.success:\n  print(\"Error:\", result.error_message)\n\n```\n\n### 1.5 **`session_id`**_(Optional[str])_\n**What** : The ID used for reusing a browser context across multiple calls. **Usage** : \n```\n# If you used session_id=\"login_session\" in CrawlerRunConfig, see it here:\nprint(\"Session:\", result.session_id)\n\n```\n\n### 1.6 **`response_headers`**_(Optional[dict])_\n**What** : Final HTTP response headers. **Usage** : \n```\nif result.response_headers:\n  print(\"Server:\", result.response_headers.get(\"Server\", \"Unknown\"))\n\n```\n\n### 1.7 **`ssl_certificate`**_(Optional[SSLCertificate])_\n**What** : If `fetch_ssl_certificate=True` in your CrawlerRunConfig, **`result.ssl_certificate`**contains a[**`SSLCertificate`**](https://docs.crawl4ai.com/api/advanced/ssl-certificate/>)object describing the site’s certificate. You can export the cert in multiple formats (PEM/DER/JSON) or access its properties like`issuer`, `subject`, `valid_from`, `valid_until`, etc. **Usage** : \n```\nif result.ssl_certificate:\n  print(\"Issuer:\", result.ssl_certificate.issuer)\n\n```\n\n## 2. Raw / Cleaned Content\n### 2.1 **`html`**_(str)_\n**What** : The **original** unmodified HTML from the final page load. **Usage** : \n```\n# Possibly large\nprint(len(result.html))\n\n```\n\n### 2.2 **`cleaned_html`**_(Optional[str])_\n**What** : A sanitized HTML version—scripts, styles, or excluded tags are removed based on your `CrawlerRunConfig`. **Usage** : \n```\nprint(result.cleaned_html[:500]) # Show a snippet\n\n```\n\n### 2.3 **`fit_html`**_(Optional[str])_\n**What** : If a **content filter** or heuristic (e.g., Pruning/BM25) modifies the HTML, the “fit” or post-filter version. **When** : This is **only** present if your `markdown_generator` or `content_filter` produces it. **Usage** : \n```\nif result.fit_html:\n  print(\"High-value HTML content:\", result.fit_html[:300])\n\n```\n\n## 3. Markdown Fields\n### 3.1 The Markdown Generation Approach\nCrawl4AI can convert HTML→Markdown, optionally including:\n  * **Raw** markdown \n  * **Links as citations** (with a references section) \n  * **Fit** markdown if a **content filter** is used (like Pruning or BM25)\n\n\n### 3.2 **`markdown_v2`**_(Optional[MarkdownGenerationResult])_\n**What** : The **structured** object holding multiple markdown variants. Soon to be consolidated into `markdown`. \n**`MarkdownGenerationResult`**includes: -**`raw_markdown`**_(str)_ : The full HTML→Markdown conversion. - **`markdown_with_citations`**_(str)_ : Same markdown, but with link references as academic-style citations. - **`references_markdown`**_(str)_ : The reference list or footnotes at the end. - **`fit_markdown`**_(Optional[str])_ : If content filtering (Pruning/BM25) was applied, the filtered “fit” text. - **`fit_html`**_(Optional[str])_ : The HTML that led to `fit_markdown`.\n**Usage** : \n```\nif result.markdown_v2:\n  md_res = result.markdown_v2\n  print(\"Raw MD:\", md_res.raw_markdown[:300])\n  print(\"Citations MD:\", md_res.markdown_with_citations[:300])\n  print(\"References:\", md_res.references_markdown)\n  if md_res.fit_markdown:\n    print(\"Pruned text:\", md_res.fit_markdown[:300])\n\n```\n\n### 3.3 **`markdown`**_(Optional[Union[str, MarkdownGenerationResult]])_\n**What** : In future versions, `markdown` will fully replace `markdown_v2`. Right now, it might be a `str` or a `MarkdownGenerationResult`. **Usage** : \n```\n# Soon, you might see:\nif isinstance(result.markdown, MarkdownGenerationResult):\n  print(result.markdown.raw_markdown[:200])\nelse:\n  print(result.markdown)\n\n```\n\n### 3.4 **`fit_markdown`**_(Optional[str])_\n**What** : A direct reference to the final filtered markdown (legacy approach). **When** : This is set if a filter or content strategy explicitly writes there. Usually overshadowed by `markdown_v2.fit_markdown`. **Usage** : \n```\nprint(result.fit_markdown) # Legacy field, prefer result.markdown_v2.fit_markdown\n\n```\n\n**Important** : “Fit” content (in `fit_markdown`/`fit_html`) only exists if you used a **filter** (like **PruningContentFilter** or **BM25ContentFilter**) within a `MarkdownGenerationStrategy`.\n## 4. Media & Links\n### 4.1 **`media`**_(Dict[str, List[Dict]])_\n**What** : Contains info about discovered images, videos, or audio. Typically keys: `\"images\"`, `\"videos\"`, `\"audios\"`. **Common Fields** in each item:\n  * `src` _(str)_ : Media URL \n  * `alt` or `title` _(str)_ : Descriptive text \n  * `score` _(float)_ : Relevance score if the crawler’s heuristic found it “important” \n  * `desc` or `description` _(Optional[str])_ : Additional context extracted from surrounding text \n\n\n**Usage** : \n```\nimages = result.media.get(\"images\", [])\nfor img in images:\n  if img.get(\"score\", 0) > 5:\n    print(\"High-value image:\", img[\"src\"])\n\n```\n\n### 4.2 **`links`**_(Dict[str, List[Dict]])_\n**What** : Holds internal and external link data. Usually two keys: `\"internal\"` and `\"external\"`. **Common Fields** :\n  * `href` _(str)_ : The link target \n  * `text` _(str)_ : Link text \n  * `title` _(str)_ : Title attribute \n  * `context` _(str)_ : Surrounding text snippet \n  * `domain` _(str)_ : If external, the domain\n\n\n**Usage** : \n```\nfor link in result.links[\"internal\"]:\n  print(f\"Internal link to {link['href']} with text {link['text']}\")\n\n```\n\n## 5. Additional Fields\n### 5.1 **`extracted_content`**_(Optional[str])_\n**What** : If you used **`extraction_strategy`**(CSS, LLM, etc.), the structured output (JSON).**Usage** : \n```\nif result.extracted_content:\n  data = json.loads(result.extracted_content)\n  print(data)\n\n```\n\n### 5.2 **`downloaded_files`**_(Optional[List[str]])_\n**What** : If `accept_downloads=True` in your `BrowserConfig` + `downloads_path`, lists local file paths for downloaded items. **Usage** : \n```\nif result.downloaded_files:\n  for file_path in result.downloaded_files:\n    print(\"Downloaded:\", file_path)\n\n```\n\n### 5.3 **`screenshot`**_(Optional[str])_\n**What** : Base64-encoded screenshot if `screenshot=True` in `CrawlerRunConfig`. **Usage** : \n```\nimport base64\nif result.screenshot:\n  with open(\"page.png\", \"wb\") as f:\n    f.write(base64.b64decode(result.screenshot))\n\n```\n\n### 5.4 **`pdf`**_(Optional[bytes])_\n**What** : Raw PDF bytes if `pdf=True` in `CrawlerRunConfig`. **Usage** : \n```\nif result.pdf:\n  with open(\"page.pdf\", \"wb\") as f:\n    f.write(result.pdf)\n\n```\n\n### 5.5 **`metadata`**_(Optional[dict])_\n**What** : Page-level metadata if discovered (title, description, OG data, etc.). **Usage** : \n```\nif result.metadata:\n  print(\"Title:\", result.metadata.get(\"title\"))\n  print(\"Author:\", result.metadata.get(\"author\"))\n\n```\n\n## 6. `dispatch_result` (optional)\nA `DispatchResult` object providing additional concurrency and resource usage information when crawling URLs in parallel (e.g., via `arun_many()` with custom dispatchers). It contains:\n  * **`task_id`**: A unique identifier for the parallel task.\n  * **`memory_usage`**(float): The memory (in MB) used at the time of completion.\n  * **`peak_memory`**(float): The peak memory usage (in MB) recorded during the task’s execution.\n  * **`start_time`**/**`end_time`**(datetime): Time range for this crawling task.\n  * **`error_message`**(str): Any dispatcher- or concurrency-related error encountered.\n\n\n```\n# Example usage:\nfor result in results:\n  if result.success and result.dispatch_result:\n    dr = result.dispatch_result\n    print(f\"URL: {result.url}, Task ID: {dr.task_id}\")\n    print(f\"Memory: {dr.memory_usage:.1f} MB (Peak: {dr.peak_memory:.1f} MB)\")\n    print(f\"Duration: {dr.end_time - dr.start_time}\")\n\n```\n\n> **Note** : This field is typically populated when using `arun_many(...)` alongside a **dispatcher** (e.g., `MemoryAdaptiveDispatcher` or `SemaphoreDispatcher`). If no concurrency or dispatcher is used, `dispatch_result` may remain `None`. \n## 7. Example: Accessing Everything\n```\nasync def handle_result(result: CrawlResult):\n  if not result.success:\n    print(\"Crawl error:\", result.error_message)\n    return\n  # Basic info\n  print(\"Crawled URL:\", result.url)\n  print(\"Status code:\", result.status_code)\n  # HTML\n  print(\"Original HTML size:\", len(result.html))\n  print(\"Cleaned HTML size:\", len(result.cleaned_html or \"\"))\n  # Markdown output\n  if result.markdown_v2:\n    print(\"Raw Markdown:\", result.markdown_v2.raw_markdown[:300])\n    print(\"Citations Markdown:\", result.markdown_v2.markdown_with_citations[:300])\n    if result.markdown_v2.fit_markdown:\n      print(\"Fit Markdown:\", result.markdown_v2.fit_markdown[:200])\n  else:\n    print(\"Raw Markdown (legacy):\", result.markdown[:200] if result.markdown else \"N/A\")\n  # Media & Links\n  if \"images\" in result.media:\n    print(\"Image count:\", len(result.media[\"images\"]))\n  if \"internal\" in result.links:\n    print(\"Internal link count:\", len(result.links[\"internal\"]))\n  # Extraction strategy result\n  if result.extracted_content:\n    print(\"Structured data:\", result.extracted_content)\n  # Screenshot/PDF\n  if result.screenshot:\n    print(\"Screenshot length:\", len(result.screenshot))\n  if result.pdf:\n    print(\"PDF bytes length:\", len(result.pdf))\n\n```\n\n## 8. Key Points & Future\n1. **`markdown_v2`vs`markdown`** - Right now, `markdown_v2` is the more robust container (`MarkdownGenerationResult`), providing **raw_markdown** , **markdown_with_citations** , references, plus possible **fit_markdown**. - In future versions, everything will unify under **`markdown`**. If you rely on advanced features (citations, fit content), check`markdown_v2`.\n2. **Fit Content** - **`fit_markdown`**and**`fit_html`**appear only if you used a content filter (like**PruningContentFilter** or **BM25ContentFilter**) inside your **MarkdownGenerationStrategy** or set them directly. - If no filter is used, they remain `None`.\n3. **References & Citations** - If you enable link citations in your `DefaultMarkdownGenerator` (`options={\"citations\": True}`), you’ll see `markdown_with_citations` plus a **`references_markdown`**block. This helps large language models or academic-like referencing.\n4. **Links & Media** - `links[\"internal\"]` and `links[\"external\"]` group discovered anchors by domain. - `media[\"images\"]` / `[\"videos\"]` / `[\"audios\"]` store extracted media elements with optional scoring or context.\n5. **Error Cases** - If `success=False`, check `error_message` (e.g., timeouts, invalid URLs). - `status_code` might be `None` if we failed before an HTTP response.\nUse **`CrawlResult`**to glean all final outputs and feed them into your data pipelines, AI models, or archives. With the synergy of a properly configured**BrowserConfig** and **CrawlerRunConfig** , the crawler can produce robust, structured results here in **`CrawlResult`**.\n##### Search\nxClose\nType to start searching\n",
  "links": [
    "https://docs.crawl4ai.com",
    "https://docs.crawl4ai.com/advanced/advanced-features",
    "https://docs.crawl4ai.com/advanced/crawl-dispatcher",
    "https://docs.crawl4ai.com/advanced/file-downloading",
    "https://docs.crawl4ai.com/advanced/hooks-auth",
    "https://docs.crawl4ai.com/advanced/identity-based-crawling",
    "https://docs.crawl4ai.com/advanced/lazy-loading",
    "https://docs.crawl4ai.com/advanced/multi-url-crawling",
    "https://docs.crawl4ai.com/advanced/proxy-security",
    "https://docs.crawl4ai.com/advanced/session-management",
    "https://docs.crawl4ai.com/advanced/ssl-certificate",
    "https://docs.crawl4ai.com/arun",
    "https://docs.crawl4ai.com/arun_many",
    "https://docs.crawl4ai.com/async-webcrawler",
    "https://docs.crawl4ai.com/blog",
    "https://docs.crawl4ai.com/core/browser-crawler-config",
    "https://docs.crawl4ai.com/core/cache-modes",
    "https://docs.crawl4ai.com/core/content-selection",
    "https://docs.crawl4ai.com/core/crawler-result",
    "https://docs.crawl4ai.com/core/docker-deploymeny",
    "https://docs.crawl4ai.com/core/fit-markdown",
    "https://docs.crawl4ai.com/core/installation",
    "https://docs.crawl4ai.com/core/link-media",
    "https://docs.crawl4ai.com/core/local-files",
    "https://docs.crawl4ai.com/core/markdown-generation",
    "https://docs.crawl4ai.com/core/page-interaction",
    "https://docs.crawl4ai.com/core/quickstart",
    "https://docs.crawl4ai.com/core/simple-crawling",
    "https://docs.crawl4ai.com/extraction/chunking",
    "https://docs.crawl4ai.com/extraction/clustring-strategies",
    "https://docs.crawl4ai.com/extraction/llm-strategies",
    "https://docs.crawl4ai.com/extraction/no-llm-strategies",
    "https://docs.crawl4ai.com/parameters",
    "https://docs.crawl4ai.com/strategies"
  ],
  "depth": 1,
  "stats": {
    "processed": 10,
    "total": 0,
    "depth": 1,
    "elapsed": "0:00:13",
    "page_limit": 34
  }
}