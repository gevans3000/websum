{
  "url": "https://docs.crawl4ai.com/advanced/hooks-auth",
  "timestamp": "2025-02-06T13:06:18.650332",
  "html": "<!DOCTYPE html><html lang=\"en\" style=\"scroll-padding-top: 50px;\"><head>\n    \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"generator\" content=\"mkdocs-1.6.0, mkdocs-terminal-4.4.0\">\n    \n    <meta name=\"description\" content=\"ðŸš€ðŸ¤– Crawl4AI, Open-source LLM-Friendly Web Crawler &amp; Scraper\"> \n     \n    \n    <link rel=\"canonical\" href=\"https://docs.crawl4ai.com/advanced/hooks-auth/\"><link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"../../img/android-chrome-192x192.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"512x512\" href=\"../../img/android-chrome-512x512.png\">\n<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../../img/apple-touch-icon.png\">\n<link rel=\"shortcut icon\" type=\"image/png\" sizes=\"48x48\" href=\"../../img/favicon.ico\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../../img/favicon-16x16.png\">\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../../img/favicon-32x32.png\">\n\n\n    \n \n<title>Hooks &amp; Auth - Crawl4AI Documentation (v0.4.3bx)</title>\n\n\n<link href=\"../../css/fontawesome/css/fontawesome.min.css\" rel=\"stylesheet\">\n<link href=\"../../css/fontawesome/css/solid.min.css\" rel=\"stylesheet\">\n<link href=\"../../css/normalize.css\" rel=\"stylesheet\">\n<link href=\"../../css/terminal.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.tile_grid.css\" rel=\"stylesheet\">\n<link href=\"../../css/theme.footer.css\" rel=\"stylesheet\">\n<!-- dark color palette -->\n<link href=\"../../css/palettes/dark.css\" rel=\"stylesheet\">\n\n<!-- page layout -->\n<style>\n/* initially set page layout to a one column grid */\n.terminal-mkdocs-main-grid {\n    display: grid;\n    grid-column-gap: 1.4em;\n    grid-template-columns: auto;\n    grid-template-rows: auto;\n}\n\n/*  \n*   when side navigation is not hidden, use a two column grid.  \n*   if the screen is too narrow, fall back to the initial one column grid layout.\n*   in this case the main content will be placed under the navigation panel. \n*/\n@media only screen and (min-width: 70em) {\n    .terminal-mkdocs-main-grid {\n        grid-template-columns: 4fr 9fr;\n    }\n}</style>\n\n\n\n    \n    <link href=\"../../assets/styles.css\" rel=\"stylesheet\"> \n    <link href=\"../../assets/highlight.css\" rel=\"stylesheet\"> \n    <link href=\"../../assets/dmvendor.css\" rel=\"stylesheet\">  \n    \n    \n\n    \n    <!-- search css support -->\n<link href=\"../../css/search/bootstrap-modal.css\" rel=\"stylesheet\">\n<!-- search scripts -->\n<script>\n    var base_url = \"../..\",\n    shortcuts = \"{}\";\n</script>\n<script src=\"../../js/jquery/jquery-1.10.1.min.js\" defer=\"\"></script>\n<script src=\"../../js/bootstrap/bootstrap.min.js\" defer=\"\"></script>\n<script src=\"../../js/mkdocs/base.js\" defer=\"\"></script>\n    \n    \n    \n    \n    <script src=\"../../assets/highlight.min.js\"></script>\n    \n    <script src=\"../../assets/highlight_init.js\"></script>\n    \n    <script src=\"https://buttons.github.io/buttons.js\"></script>\n    \n    <script src=\"../../search/main.js\"></script>\n    \n\n    \n</head>\n\n<body class=\"terminal\" style=\"\"><div class=\"container\">\n    <div class=\"terminal-nav\">\n        <header class=\"terminal-logo\">\n            <div id=\"mkdocs-terminal-site-name\" class=\"logo terminal-prompt\"><a href=\"https://docs.crawl4ai.com/\" class=\"no-style\">Crawl4AI Documentation (v0.4.3bx)</a></div>\n        </header>\n        \n        <nav class=\"terminal-menu\">\n            \n            <ul vocab=\"https://schema.org/\" typeof=\"BreadcrumbList\">\n                \n                \n                <li property=\"itemListElement\" typeof=\"ListItem\">\n                    <a href=\"../..\" class=\"menu-item \" property=\"item\" typeof=\"WebPage\">\n                        <span property=\"name\">Home</span>\n                    </a>\n                    <meta property=\"position\" content=\"0\">\n                </li>\n                \n                \n                \n                \n                <li property=\"itemListElement\" typeof=\"ListItem\">\n                    <a href=\"../../core/quickstart/\" class=\"menu-item \" property=\"item\" typeof=\"WebPage\">\n                        <span property=\"name\">Quick Start</span>\n                    </a>\n                    <meta property=\"position\" content=\"1\">\n                </li>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                    \n                    \n\n\n<li property=\"itemListElement\" typeof=\"ListItem\">\n    <a href=\"#\" class=\"menu-item\" data-toggle=\"modal\" data-target=\"#mkdocs_search_modal\" property=\"item\" typeof=\"SearchAction\">\n        <i aria-hidden=\"true\" class=\"fa fa-search\"></i> <span property=\"name\">Search</span>\n    </a>\n    <meta property=\"position\" content=\"2\">\n</li>\n                    \n            </ul>\n            \n        </nav>\n    </div>\n</div>\n        \n    <div class=\"container\">\n        <div class=\"terminal-mkdocs-main-grid\"><aside id=\"terminal-mkdocs-side-panel\"><nav>\n  \n    <ul class=\"terminal-mkdocs-side-nav-items\">\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../..\">Home</a>\n        \n    \n    \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Setup &amp; Installation</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/installation/\">Installation</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/docker-deploymeny/\">Docker Deployment</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/quickstart/\">Quick Start</a>\n        \n    \n    \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Blog &amp; Changelog</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../blog/\">Blog Home</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"https://github.com/unclecode/crawl4ai/blob/main/CHANGELOG.md\">Changelog</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Core</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/simple-crawling/\">Simple Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/crawler-result/\">Crawler Result</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/browser-crawler-config/\">Browser &amp; Crawler Config</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/markdown-generation/\">Markdown Generation</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/fit-markdown/\">Fit Markdown</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/page-interaction/\">Page Interaction</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/content-selection/\">Content Selection</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/cache-modes/\">Cache Modes</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/local-files/\">Local Files &amp; Raw HTML</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../core/link-media/\">Link &amp; Media</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item--active terminal-mkdocs-side-nav-section-no-index\">Advanced</span>\n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../advanced-features/\">Overview</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../file-downloading/\">File Downloading</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../lazy-loading/\">Lazy Loading</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        <span class=\"\n\n    terminal-mkdocs-side-nav-item--active\">Hooks &amp; Auth</span>\n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../proxy-security/\">Proxy &amp; Security</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../session-management/\">Session Management</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../multi-url-crawling/\">Multi-URL Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../crawl-dispatcher/\">Crawl Dispatcher</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../identity-based-crawling/\">Identity Based Crawling</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../ssl-certificate/\">SSL Certificate</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">Extraction</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/no-llm-strategies/\">LLM-Free Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/llm-strategies/\">LLM Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/clustring-strategies/\">Clustering Strategies</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../extraction/chunking/\">Chunking</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n          \n\n\n\n<li class=\"terminal-mkdocs-side-nav-li\">\n    \n    \n        \n        \n\n        \n            \n    \n        \n        \n            \n            \n            <span class=\"\n        \n    \n\n    terminal-mkdocs-side-nav-item terminal-mkdocs-side-nav-section-no-index\">API Reference</span>\n        \n    \n    \n        \n      \n        \n            <ul class=\"terminal-mkdocs-side-nav-li-ul\">\n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/async-webcrawler/\">AsyncWebCrawler</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/arun/\">arun()</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/arun_many/\">arun_many()</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/parameters/\">Browser &amp; Crawler Config</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/crawl-result/\">CrawlResult</a>\n        \n    \n    </li>\n            \n        \n            \n            \n\n             \n                <li class=\"terminal-mkdocs-side-nav-li-ul-li\">\n    \n        \n        \n            <a class=\"\n\n    terminal-mkdocs-side-nav-item\" href=\"../../api/strategies/\">Strategies</a>\n        \n    \n    </li>\n            \n            \n    </ul>\n        \n    \n  </li>\n        \n    </ul>\n  \n</nav><hr>\n<nav>\n    <ul>\n        <li><a href=\"#hooks-auth-in-asyncwebcrawler\">Hooks &amp; Auth in AsyncWebCrawler</a></li>\n        <li><a href=\"#example-using-hooks-in-asyncwebcrawler\">Example: Using Hooks in AsyncWebCrawler</a></li><li><a href=\"#hook-lifecycle-summary\">Hook Lifecycle Summary</a></li><li><a href=\"#when-to-handle-authentication\">When to Handle Authentication</a></li><li><a href=\"#additional-considerations\">Additional Considerations</a></li><li><a href=\"#conclusion\">Conclusion</a></li>\n    </ul>\n</nav>\n</aside>\n            <main id=\"terminal-mkdocs-main-content\">\n<section id=\"mkdocs-terminal-content\">\n    <h1 id=\"hooks-auth-in-asyncwebcrawler\">Hooks &amp; Auth in AsyncWebCrawler</h1>\n<p>Crawl4AIâ€™s <strong>hooks</strong> let you customize the crawler at specific points in the pipeline:</p>\n<p>1.â€€<strong><code>on_browser_created</code></strong> â€“ After browser creation.<br>\n2.â€€<strong><code>on_page_context_created</code></strong> â€“ After a new context &amp; page are created.<br>\n3.â€€<strong><code>before_goto</code></strong> â€“ Just before navigating to a page.<br>\n4.â€€<strong><code>after_goto</code></strong> â€“ Right after navigation completes.<br>\n5.â€€<strong><code>on_user_agent_updated</code></strong> â€“ Whenever the user agent changes.<br>\n6.â€€<strong><code>on_execution_started</code></strong> â€“ Once custom JavaScript execution begins.<br>\n7.â€€<strong><code>before_retrieve_html</code></strong> â€“ Just before the crawler retrieves final HTML.<br>\n8.â€€<strong><code>before_return_html</code></strong> â€“ Right before returning the HTML content.</p>\n<p><strong>Important</strong>: Avoid heavy tasks in <code>on_browser_created</code> since you donâ€™t yet have a page context. If you need to <em>log in</em>, do so in <strong><code>on_page_context_created</code></strong>.</p>\n<blockquote>\n<p>note \"Important Hook Usage Warning\"\n    <strong>Avoid Misusing Hooks</strong>: Do not manipulate page objects in the wrong hook or at the wrong time, as it can crash the pipeline or produce incorrect results. A common mistake is attempting to handle authentication prematurelyâ€”such as creating or closing pages in <code>on_browser_created</code>. </p>\n<p><strong>Use the Right Hook for Auth</strong>: If you need to log in or set tokens, use <code>on_page_context_created</code>. This ensures you have a valid page/context to work with, without disrupting the main crawling flow.</p>\n<p><strong>Identity-Based Crawling</strong>: For robust auth, consider identity-based crawling (or passing a session ID) to preserve state. Run your initial login steps in a separate, well-defined process, then feed that session to your main crawlâ€”rather than shoehorning complex authentication into early hooks. Check out <a href=\"../identity-based-crawling/\">Identity-Based Crawling</a> for more details.</p>\n<p><strong>Be Cautious</strong>: Overwriting or removing elements in the wrong hook can compromise the final crawl. Keep hooks focused on smaller tasks (like route filters, custom headers), and let your main logic (crawling, data extraction) proceed normally.</p>\n</blockquote>\n<p>Below is an example demonstration.</p>\n<hr>\n<h2 id=\"example-using-hooks-in-asyncwebcrawler\">Example: Using Hooks in AsyncWebCrawler</h2>\n<div class=\"highlight\"><pre><span></span><code data-highlighted=\"yes\" class=\"hljs language-python\"><span class=\"hljs-keyword\">import</span> asyncio\n<span class=\"hljs-keyword\">import</span> json\n<span class=\"hljs-keyword\">from</span> crawl4ai <span class=\"hljs-keyword\">import</span> AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode\n<span class=\"hljs-keyword\">from</span> playwright.async_api <span class=\"hljs-keyword\">import</span> Page, BrowserContext\n\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"ðŸ”— Hooks Example: Demonstrating recommended usage\"</span>)\n\n    <span class=\"hljs-comment\"># 1) Configure the browser</span>\n    browser_config = BrowserConfig(\n        headless=<span class=\"hljs-literal\">True</span>,\n        verbose=<span class=\"hljs-literal\">True</span>\n    )\n\n    <span class=\"hljs-comment\"># 2) Configure the crawler run</span>\n    crawler_run_config = CrawlerRunConfig(\n        js_code=<span class=\"hljs-string\">\"window.scrollTo(0, document.body.scrollHeight);\"</span>,\n        wait_for=<span class=\"hljs-string\">\"body\"</span>,\n        cache_mode=CacheMode.BYPASS\n    )\n\n    <span class=\"hljs-comment\"># 3) Create the crawler instance</span>\n    crawler = AsyncWebCrawler(config=browser_config)\n\n    <span class=\"hljs-comment\">#</span>\n    <span class=\"hljs-comment\"># Define Hook Functions</span>\n    <span class=\"hljs-comment\">#</span>\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">on_browser_created</span>(<span class=\"hljs-params\">browser, **kwargs</span>):\n        <span class=\"hljs-comment\"># Called once the browser instance is created (but no pages or contexts yet)</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[HOOK] on_browser_created - Browser created successfully!\"</span>)\n        <span class=\"hljs-comment\"># Typically, do minimal setup here if needed</span>\n        <span class=\"hljs-keyword\">return</span> browser\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">on_page_context_created</span>(<span class=\"hljs-params\">page: Page, context: BrowserContext, **kwargs</span>):\n        <span class=\"hljs-comment\"># Called right after a new page + context are created (ideal for auth or route config).</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[HOOK] on_page_context_created - Setting up page &amp; context.\"</span>)\n\n        <span class=\"hljs-comment\"># Example 1: Route filtering (e.g., block images)</span>\n        <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">route_filter</span>(<span class=\"hljs-params\">route</span>):\n            <span class=\"hljs-keyword\">if</span> route.request.resource_type == <span class=\"hljs-string\">\"image\"</span>:\n                <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"[HOOK] Blocking image request: <span class=\"hljs-subst\">{route.request.url}</span>\"</span>)\n                <span class=\"hljs-keyword\">await</span> route.abort()\n            <span class=\"hljs-keyword\">else</span>:\n                <span class=\"hljs-keyword\">await</span> route.continue_()\n\n        <span class=\"hljs-keyword\">await</span> context.route(<span class=\"hljs-string\">\"**\"</span>, route_filter)\n\n        <span class=\"hljs-comment\"># Example 2: (Optional) Simulate a login scenario</span>\n        <span class=\"hljs-comment\"># (We do NOT create or close pages here, just do quick steps if needed)</span>\n        <span class=\"hljs-comment\"># e.g., await page.goto(\"https://example.com/login\")</span>\n        <span class=\"hljs-comment\"># e.g., await page.fill(\"input[name='username']\", \"testuser\")</span>\n        <span class=\"hljs-comment\"># e.g., await page.fill(\"input[name='password']\", \"password123\")</span>\n        <span class=\"hljs-comment\"># e.g., await page.click(\"button[type='submit']\")</span>\n        <span class=\"hljs-comment\"># e.g., await page.wait_for_selector(\"#welcome\")</span>\n        <span class=\"hljs-comment\"># e.g., await context.add_cookies([...])</span>\n        <span class=\"hljs-comment\"># Then continue</span>\n\n        <span class=\"hljs-comment\"># Example 3: Adjust the viewport</span>\n        <span class=\"hljs-keyword\">await</span> page.set_viewport_size({<span class=\"hljs-string\">\"width\"</span>: <span class=\"hljs-number\">1080</span>, <span class=\"hljs-string\">\"height\"</span>: <span class=\"hljs-number\">600</span>})\n        <span class=\"hljs-keyword\">return</span> page\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">before_goto</span>(<span class=\"hljs-params\">\n        page: Page, context: BrowserContext, url: <span class=\"hljs-built_in\">str</span>, **kwargs\n    </span>):\n        <span class=\"hljs-comment\"># Called before navigating to each URL.</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"[HOOK] before_goto - About to navigate: <span class=\"hljs-subst\">{url}</span>\"</span>)\n        <span class=\"hljs-comment\"># e.g., inject custom headers</span>\n        <span class=\"hljs-keyword\">await</span> page.set_extra_http_headers({\n            <span class=\"hljs-string\">\"Custom-Header\"</span>: <span class=\"hljs-string\">\"my-value\"</span>\n        })\n        <span class=\"hljs-keyword\">return</span> page\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">after_goto</span>(<span class=\"hljs-params\">\n        page: Page, context: BrowserContext, \n        url: <span class=\"hljs-built_in\">str</span>, response, **kwargs\n    </span>):\n        <span class=\"hljs-comment\"># Called after navigation completes.</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"[HOOK] after_goto - Successfully loaded: <span class=\"hljs-subst\">{url}</span>\"</span>)\n        <span class=\"hljs-comment\"># e.g., wait for a certain element if we want to verify</span>\n        <span class=\"hljs-keyword\">try</span>:\n            <span class=\"hljs-keyword\">await</span> page.wait_for_selector(<span class=\"hljs-string\">'.content'</span>, timeout=<span class=\"hljs-number\">1000</span>)\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[HOOK] Found .content element!\"</span>)\n        <span class=\"hljs-keyword\">except</span>:\n            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[HOOK] .content not found, continuing anyway.\"</span>)\n        <span class=\"hljs-keyword\">return</span> page\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">on_user_agent_updated</span>(<span class=\"hljs-params\">\n        page: Page, context: BrowserContext, \n        user_agent: <span class=\"hljs-built_in\">str</span>, **kwargs\n    </span>):\n        <span class=\"hljs-comment\"># Called whenever the user agent updates.</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"[HOOK] on_user_agent_updated - New user agent: <span class=\"hljs-subst\">{user_agent}</span>\"</span>)\n        <span class=\"hljs-keyword\">return</span> page\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">on_execution_started</span>(<span class=\"hljs-params\">page: Page, context: BrowserContext, **kwargs</span>):\n        <span class=\"hljs-comment\"># Called after custom JavaScript execution begins.</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[HOOK] on_execution_started - JS code is running!\"</span>)\n        <span class=\"hljs-keyword\">return</span> page\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">before_retrieve_html</span>(<span class=\"hljs-params\">page: Page, context: BrowserContext, **kwargs</span>):\n        <span class=\"hljs-comment\"># Called before final HTML retrieval.</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"[HOOK] before_retrieve_html - We can do final actions\"</span>)\n        <span class=\"hljs-comment\"># Example: Scroll again</span>\n        <span class=\"hljs-keyword\">await</span> page.evaluate(<span class=\"hljs-string\">\"window.scrollTo(0, document.body.scrollHeight);\"</span>)\n        <span class=\"hljs-keyword\">return</span> page\n\n    <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">before_return_html</span>(<span class=\"hljs-params\">\n        page: Page, context: BrowserContext, html: <span class=\"hljs-built_in\">str</span>, **kwargs\n    </span>):\n        <span class=\"hljs-comment\"># Called just before returning the HTML in the result.</span>\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f\"[HOOK] before_return_html - HTML length: <span class=\"hljs-subst\">{<span class=\"hljs-built_in\">len</span>(html)}</span>\"</span>)\n        <span class=\"hljs-keyword\">return</span> page\n\n    <span class=\"hljs-comment\">#</span>\n    <span class=\"hljs-comment\"># Attach Hooks</span>\n    <span class=\"hljs-comment\">#</span>\n\n    crawler.crawler_strategy.set_hook(<span class=\"hljs-string\">\"on_browser_created\"</span>, on_browser_created)\n    crawler.crawler_strategy.set_hook(\n        <span class=\"hljs-string\">\"on_page_context_created\"</span>, on_page_context_created\n    )\n    crawler.crawler_strategy.set_hook(<span class=\"hljs-string\">\"before_goto\"</span>, before_goto)\n    crawler.crawler_strategy.set_hook(<span class=\"hljs-string\">\"after_goto\"</span>, after_goto)\n    crawler.crawler_strategy.set_hook(\n        <span class=\"hljs-string\">\"on_user_agent_updated\"</span>, on_user_agent_updated\n    )\n    crawler.crawler_strategy.set_hook(\n        <span class=\"hljs-string\">\"on_execution_started\"</span>, on_execution_started\n    )\n    crawler.crawler_strategy.set_hook(\n        <span class=\"hljs-string\">\"before_retrieve_html\"</span>, before_retrieve_html\n    )\n    crawler.crawler_strategy.set_hook(\n        <span class=\"hljs-string\">\"before_return_html\"</span>, before_return_html\n    )\n\n    <span class=\"hljs-keyword\">await</span> crawler.start()\n\n    <span class=\"hljs-comment\"># 4) Run the crawler on an example page</span>\n    url = <span class=\"hljs-string\">\"https://example.com\"</span>\n    result = <span class=\"hljs-keyword\">await</span> crawler.arun(url, config=crawler_run_config)\n\n    <span class=\"hljs-keyword\">if</span> result.success:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"\\nCrawled URL:\"</span>, result.url)\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"HTML length:\"</span>, <span class=\"hljs-built_in\">len</span>(result.html))\n    <span class=\"hljs-keyword\">else</span>:\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Error:\"</span>, result.error_message)\n\n    <span class=\"hljs-keyword\">await</span> crawler.close()\n\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:\n    asyncio.run(main())\n</code></pre></div>\n<hr>\n<h2 id=\"hook-lifecycle-summary\">Hook Lifecycle Summary</h2>\n<p>1.â€€<strong><code>on_browser_created</code></strong>:<br>\n   - Browser is up, but <strong>no</strong> pages or contexts yet.<br>\n   - Light setup onlyâ€”donâ€™t try to open or close pages here (that belongs in <code>on_page_context_created</code>).</p>\n<p>2.â€€<strong><code>on_page_context_created</code></strong>:<br>\n   - Perfect for advanced <strong>auth</strong> or route blocking.<br>\n   - You have a <strong>page</strong> + <strong>context</strong> ready but havenâ€™t navigated to the target URL yet.</p>\n<p>3.â€€<strong><code>before_goto</code></strong>:<br>\n   - Right before navigation. Typically used for setting <strong>custom headers</strong> or logging the target URL.</p>\n<p>4.â€€<strong><code>after_goto</code></strong>:<br>\n   - After page navigation is done. Good place for verifying content or waiting on essential elements. </p>\n<p>5.â€€<strong><code>on_user_agent_updated</code></strong>:<br>\n   - Whenever the user agent changes (for stealth or different UA modes).</p>\n<p>6.â€€<strong><code>on_execution_started</code></strong>:<br>\n   - If you set <code>js_code</code> or run custom scripts, this runs once your JS is about to start.</p>\n<p>7.â€€<strong><code>before_retrieve_html</code></strong>:<br>\n   - Just before the final HTML snapshot is taken. Often you do a final scroll or lazy-load triggers here.</p>\n<p>8.â€€<strong><code>before_return_html</code></strong>:<br>\n   - The last hook before returning HTML to the <code>CrawlResult</code>. Good for logging HTML length or minor modifications.</p>\n<hr>\n<h2 id=\"when-to-handle-authentication\">When to Handle Authentication</h2>\n<p><strong>Recommended</strong>: Use <strong><code>on_page_context_created</code></strong> if you need to:</p>\n<ul>\n<li>Navigate to a login page or fill forms</li>\n<li>Set cookies or localStorage tokens</li>\n<li>Block resource routes to avoid ads</li>\n</ul>\n<p>This ensures the newly created context is under your control <strong>before</strong> <code>arun()</code> navigates to the main URL.</p>\n<hr>\n<h2 id=\"additional-considerations\">Additional Considerations</h2>\n<ul>\n<li><strong>Session Management</strong>: If you want multiple <code>arun()</code> calls to reuse a single session, pass <code>session_id=</code> in your <code>CrawlerRunConfig</code>. Hooks remain the same.  </li>\n<li><strong>Performance</strong>: Hooks can slow down crawling if they do heavy tasks. Keep them concise.  </li>\n<li><strong>Error Handling</strong>: If a hook fails, the overall crawl might fail. Catch exceptions or handle them gracefully.  </li>\n<li><strong>Concurrency</strong>: If you run <code>arun_many()</code>, each URL triggers these hooks in parallel. Ensure your hooks are thread/async-safe.</li>\n</ul>\n<hr>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>Hooks provide <strong>fine-grained</strong> control over:</p>\n<ul>\n<li><strong>Browser</strong> creation (light tasks only)</li>\n<li><strong>Page</strong> and <strong>context</strong> creation (auth, route blocking)</li>\n<li><strong>Navigation</strong> phases</li>\n<li><strong>Final HTML</strong> retrieval</li>\n</ul>\n<p>Follow the recommended usage:\n- <strong>Login</strong> or advanced tasks in <code>on_page_context_created</code><br>\n- <strong>Custom headers</strong> or logs in <code>before_goto</code> / <code>after_goto</code><br>\n- <strong>Scrolling</strong> or final checks in <code>before_retrieve_html</code> / <code>before_return_html</code></p>\n</section>\n\n            </main>\n        </div>\n        <hr><footer>\n    <div class=\"terminal-mkdocs-footer-grid\">\n        <div id=\"terminal-mkdocs-footer-copyright-info\">\n             Site built with <a href=\"http://www.mkdocs.org\">MkDocs</a> and <a href=\"https://github.com/ntno/mkdocs-terminal\">Terminal for MkDocs</a>.\n        </div>\n    </div>\n</footer>\n    </div>\n\n    \n    <div class=\"modal\" id=\"mkdocs_search_modal\" tabindex=\"-1\" role=\"alertdialog\" aria-modal=\"true\" aria-labelledby=\"searchModalLabel\">\n    <div class=\"modal-dialog modal-lg\" role=\"search\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"searchModalLabel\">Search</h5>\n                <button type=\"button\" class=\"close btn btn-default btn-ghost\" data-dismiss=\"modal\"><span aria-hidden=\"true\">x</span><span class=\"sr-only\">Close</span></button>\n            </div>\n            <div class=\"modal-body\">\n                <p id=\"searchInputLabel\">Type to start searching</p>\n                <form>\n                    <div class=\"form-group\">\n                        <input type=\"search\" class=\"form-control\" aria-labelledby=\"searchInputLabel\" placeholder=\"\" id=\"mkdocs-search-query\" title=\"Please enter search terms here\">\n                    </div>\n                </form>\n                <div id=\"mkdocs-search-results\" data-no-results-text=\"No document matches found\"></div>\n            </div>\n            <div class=\"modal-footer\">\n            </div>\n        </div>\n    </div>\n</div>\n    \n    \n\n\n</body></html>",
  "markdown": "# Hooks & Auth in AsyncWebCrawler\nCrawl4AIâ€™s **hooks** let you customize the crawler at specific points in the pipeline:\n1. **`on_browser_created`**â€“ After browser creation. 2.**`on_page_context_created`**â€“ After a new context & page are created. 3. **`before_goto`**â€“ Just before navigating to a page. 4.**`after_goto`**â€“ Right after navigation completes. 5.**`on_user_agent_updated`**â€“ Whenever the user agent changes. 6.**`on_execution_started`**â€“ Once custom JavaScript execution begins. 7.**`before_retrieve_html`**â€“ Just before the crawler retrieves final HTML. 8.**`before_return_html`**â€“ Right before returning the HTML content.\n**Important** : Avoid heavy tasks in `on_browser_created` since you donâ€™t yet have a page context. If you need to _log in_ , do so in **`on_page_context_created`**.\n> note \"Important Hook Usage Warning\" **Avoid Misusing Hooks** : Do not manipulate page objects in the wrong hook or at the wrong time, as it can crash the pipeline or produce incorrect results. A common mistake is attempting to handle authentication prematurelyâ€”such as creating or closing pages in `on_browser_created`. \n> **Use the Right Hook for Auth** : If you need to log in or set tokens, use `on_page_context_created`. This ensures you have a valid page/context to work with, without disrupting the main crawling flow.\n> **Identity-Based Crawling** : For robust auth, consider identity-based crawling (or passing a session ID) to preserve state. Run your initial login steps in a separate, well-defined process, then feed that session to your main crawlâ€”rather than shoehorning complex authentication into early hooks. Check out [Identity-Based Crawling](https://docs.crawl4ai.com/advanced/<../identity-based-crawling/>) for more details.\n> **Be Cautious** : Overwriting or removing elements in the wrong hook can compromise the final crawl. Keep hooks focused on smaller tasks (like route filters, custom headers), and let your main logic (crawling, data extraction) proceed normally.\nBelow is an example demonstration.\n## Example: Using Hooks in AsyncWebCrawler\n```\nimport asyncio\nimport json\nfrom crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, CacheMode\nfrom playwright.async_api import Page, BrowserContext\nasync def main():\n  print(\"ðŸ”— Hooks Example: Demonstrating recommended usage\")\n  # 1) Configure the browser\n  browser_config = BrowserConfig(\n    headless=True,\n    verbose=True\n  )\n  # 2) Configure the crawler run\n  crawler_run_config = CrawlerRunConfig(\n    js_code=\"window.scrollTo(0, document.body.scrollHeight);\",\n    wait_for=\"body\",\n    cache_mode=CacheMode.BYPASS\n  )\n  # 3) Create the crawler instance\n  crawler = AsyncWebCrawler(config=browser_config)\n  #\n  # Define Hook Functions\n  #\n  async def on_browser_created(browser, **kwargs):\n    # Called once the browser instance is created (but no pages or contexts yet)\n    print(\"[HOOK] on_browser_created - Browser created successfully!\")\n    # Typically, do minimal setup here if needed\n    return browser\n  async def on_page_context_created(page: Page, context: BrowserContext, **kwargs):\n    # Called right after a new page + context are created (ideal for auth or route config).\n    print(\"[HOOK] on_page_context_created - Setting up page & context.\")\n    # Example 1: Route filtering (e.g., block images)\n    async def route_filter(route):\n      if route.request.resource_type == \"image\":\n        print(f\"[HOOK] Blocking image request: {route.request.url}\")\n        await route.abort()\n      else:\n        await route.continue_()\n    await context.route(\"**\", route_filter)\n    # Example 2: (Optional) Simulate a login scenario\n    # (We do NOT create or close pages here, just do quick steps if needed)\n    # e.g., await page.goto(\"https://example.com/login\")\n    # e.g., await page.fill(\"input[name='username']\", \"testuser\")\n    # e.g., await page.fill(\"input[name='password']\", \"password123\")\n    # e.g., await page.click(\"button[type='submit']\")\n    # e.g., await page.wait_for_selector(\"#welcome\")\n    # e.g., await context.add_cookies([...])\n    # Then continue\n    # Example 3: Adjust the viewport\n    await page.set_viewport_size({\"width\": 1080, \"height\": 600})\n    return page\n  async def before_goto(\n    page: Page, context: BrowserContext, url: str, **kwargs\n  ):\n    # Called before navigating to each URL.\n    print(f\"[HOOK] before_goto - About to navigate: {url}\")\n    # e.g., inject custom headers\n    await page.set_extra_http_headers({\n      \"Custom-Header\": \"my-value\"\n    })\n    return page\n  async def after_goto(\n    page: Page, context: BrowserContext, \n    url: str, response, **kwargs\n  ):\n    # Called after navigation completes.\n    print(f\"[HOOK] after_goto - Successfully loaded: {url}\")\n    # e.g., wait for a certain element if we want to verify\n    try:\n      await page.wait_for_selector('.content', timeout=1000)\n      print(\"[HOOK] Found .content element!\")\n    except:\n      print(\"[HOOK] .content not found, continuing anyway.\")\n    return page\n  async def on_user_agent_updated(\n    page: Page, context: BrowserContext, \n    user_agent: str, **kwargs\n  ):\n    # Called whenever the user agent updates.\n    print(f\"[HOOK] on_user_agent_updated - New user agent: {user_agent}\")\n    return page\n  async def on_execution_started(page: Page, context: BrowserContext, **kwargs):\n    # Called after custom JavaScript execution begins.\n    print(\"[HOOK] on_execution_started - JS code is running!\")\n    return page\n  async def before_retrieve_html(page: Page, context: BrowserContext, **kwargs):\n    # Called before final HTML retrieval.\n    print(\"[HOOK] before_retrieve_html - We can do final actions\")\n    # Example: Scroll again\n    await page.evaluate(\"window.scrollTo(0, document.body.scrollHeight);\")\n    return page\n  async def before_return_html(\n    page: Page, context: BrowserContext, html: str, **kwargs\n  ):\n    # Called just before returning the HTML in the result.\n    print(f\"[HOOK] before_return_html - HTML length: {len(html)}\")\n    return page\n  #\n  # Attach Hooks\n  #\n  crawler.crawler_strategy.set_hook(\"on_browser_created\", on_browser_created)\n  crawler.crawler_strategy.set_hook(\n    \"on_page_context_created\", on_page_context_created\n  )\n  crawler.crawler_strategy.set_hook(\"before_goto\", before_goto)\n  crawler.crawler_strategy.set_hook(\"after_goto\", after_goto)\n  crawler.crawler_strategy.set_hook(\n    \"on_user_agent_updated\", on_user_agent_updated\n  )\n  crawler.crawler_strategy.set_hook(\n    \"on_execution_started\", on_execution_started\n  )\n  crawler.crawler_strategy.set_hook(\n    \"before_retrieve_html\", before_retrieve_html\n  )\n  crawler.crawler_strategy.set_hook(\n    \"before_return_html\", before_return_html\n  )\n  await crawler.start()\n  # 4) Run the crawler on an example page\n  url = \"https://example.com\"\n  result = await crawler.arun(url, config=crawler_run_config)\n  if result.success:\n    print(\"\\nCrawled URL:\", result.url)\n    print(\"HTML length:\", len(result.html))\n  else:\n    print(\"Error:\", result.error_message)\n  await crawler.close()\nif __name__ == \"__main__\":\n  asyncio.run(main())\n\n```\n\n## Hook Lifecycle Summary\n1. **`on_browser_created`**: - Browser is up, but**no** pages or contexts yet. - Light setup onlyâ€”donâ€™t try to open or close pages here (that belongs in `on_page_context_created`).\n2. **`on_page_context_created`**: - Perfect for advanced**auth** or route blocking. - You have a **page** + **context** ready but havenâ€™t navigated to the target URL yet.\n3. **`before_goto`**: - Right before navigation. Typically used for setting**custom headers** or logging the target URL.\n4. **`after_goto`**: - After page navigation is done. Good place for verifying content or waiting on essential elements.\n5. **`on_user_agent_updated`**: - Whenever the user agent changes (for stealth or different UA modes).\n6. **`on_execution_started`**: - If you set`js_code` or run custom scripts, this runs once your JS is about to start.\n7. **`before_retrieve_html`**: - Just before the final HTML snapshot is taken. Often you do a final scroll or lazy-load triggers here.\n8. **`before_return_html`**: - The last hook before returning HTML to the`CrawlResult`. Good for logging HTML length or minor modifications.\n## When to Handle Authentication\n**Recommended** : Use **`on_page_context_created`**if you need to:\n  * Navigate to a login page or fill forms\n  * Set cookies or localStorage tokens\n  * Block resource routes to avoid ads\n\n\nThis ensures the newly created context is under your control **before** `arun()` navigates to the main URL.\n## Additional Considerations\n  * **Session Management** : If you want multiple `arun()` calls to reuse a single session, pass `session_id=` in your `CrawlerRunConfig`. Hooks remain the same. \n  * **Performance** : Hooks can slow down crawling if they do heavy tasks. Keep them concise. \n  * **Error Handling** : If a hook fails, the overall crawl might fail. Catch exceptions or handle them gracefully. \n  * **Concurrency** : If you run `arun_many()`, each URL triggers these hooks in parallel. Ensure your hooks are thread/async-safe.\n\n\n## Conclusion\nHooks provide **fine-grained** control over:\n  * **Browser** creation (light tasks only)\n  * **Page** and **context** creation (auth, route blocking)\n  * **Navigation** phases\n  * **Final HTML** retrieval\n\n\nFollow the recommended usage: - **Login** or advanced tasks in `on_page_context_created` - **Custom headers** or logs in `before_goto` / `after_goto` - **Scrolling** or final checks in `before_retrieve_html` / `before_return_html`\n##### Search\nxClose\nType to start searching\n",
  "links": [
    "https://docs.crawl4ai.com",
    "https://docs.crawl4ai.com/advanced-features",
    "https://docs.crawl4ai.com/api/arun",
    "https://docs.crawl4ai.com/api/arun_many",
    "https://docs.crawl4ai.com/api/async-webcrawler",
    "https://docs.crawl4ai.com/api/crawl-result",
    "https://docs.crawl4ai.com/api/parameters",
    "https://docs.crawl4ai.com/api/strategies",
    "https://docs.crawl4ai.com/blog",
    "https://docs.crawl4ai.com/core/browser-crawler-config",
    "https://docs.crawl4ai.com/core/cache-modes",
    "https://docs.crawl4ai.com/core/content-selection",
    "https://docs.crawl4ai.com/core/crawler-result",
    "https://docs.crawl4ai.com/core/docker-deploymeny",
    "https://docs.crawl4ai.com/core/fit-markdown",
    "https://docs.crawl4ai.com/core/installation",
    "https://docs.crawl4ai.com/core/link-media",
    "https://docs.crawl4ai.com/core/local-files",
    "https://docs.crawl4ai.com/core/markdown-generation",
    "https://docs.crawl4ai.com/core/page-interaction",
    "https://docs.crawl4ai.com/core/quickstart",
    "https://docs.crawl4ai.com/core/simple-crawling",
    "https://docs.crawl4ai.com/crawl-dispatcher",
    "https://docs.crawl4ai.com/extraction/chunking",
    "https://docs.crawl4ai.com/extraction/clustring-strategies",
    "https://docs.crawl4ai.com/extraction/llm-strategies",
    "https://docs.crawl4ai.com/extraction/no-llm-strategies",
    "https://docs.crawl4ai.com/file-downloading",
    "https://docs.crawl4ai.com/identity-based-crawling",
    "https://docs.crawl4ai.com/lazy-loading",
    "https://docs.crawl4ai.com/multi-url-crawling",
    "https://docs.crawl4ai.com/proxy-security",
    "https://docs.crawl4ai.com/session-management",
    "https://docs.crawl4ai.com/ssl-certificate"
  ],
  "depth": 1,
  "stats": {
    "processed": 2,
    "total": 0,
    "depth": 1,
    "elapsed": "0:00:03",
    "page_limit": 3
  }
}